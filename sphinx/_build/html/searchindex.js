Search.setIndex({"docnames": ["aisquared", "aisquared.base", "aisquared.config", "aisquared.config.analytic", "aisquared.config.feedback", "aisquared.config.harvesting", "aisquared.config.postprocessing", "aisquared.config.preprocessing", "aisquared.config.preprocessing.image", "aisquared.config.preprocessing.tabular", "aisquared.config.preprocessing.text", "aisquared.config.rendering", "aisquared.logging", "aisquared.platform", "aisquared.serving", "aisquared.utils", "index", "modules"], "filenames": ["aisquared.rst", "aisquared.base.rst", "aisquared.config.rst", "aisquared.config.analytic.rst", "aisquared.config.feedback.rst", "aisquared.config.harvesting.rst", "aisquared.config.postprocessing.rst", "aisquared.config.preprocessing.rst", "aisquared.config.preprocessing.image.rst", "aisquared.config.preprocessing.tabular.rst", "aisquared.config.preprocessing.text.rst", "aisquared.config.rendering.rst", "aisquared.logging.rst", "aisquared.platform.rst", "aisquared.serving.rst", "aisquared.utils.rst", "index.rst", "modules.rst"], "titles": ["aisquared package", "aisquared.base package", "aisquared.config package", "aisquared.config.analytic package", "aisquared.config.feedback package", "aisquared.config.harvesting package", "aisquared.config.postprocessing package", "aisquared.config.preprocessing package", "aisquared.config.preprocessing.image package", "aisquared.config.preprocessing.tabular package", "aisquared.config.preprocessing.text package", "aisquared.config.rendering package", "aisquared.logging package", "aisquared.platform package", "aisquared.serving package", "aisquared.utils package", "Welcome to the documentation for the <cite>aisquared</cite> python package!", "aisquared"], "terms": {"base": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 16, 17], "submodul": [0, 7, 17], "baseobject": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 17], "to_dict": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16], "to_json": 1, "customobject": [0, 16, 17], "render": [0, 2, 16, 17], "stage": [0, 2, 16, 17], "config": [0, 16, 17], "analyt": [0, 2, 11, 16], "deployedanalyt": 2, "deployedmodel": 2, "localanalyt": [2, 16], "localmodel": 2, "reversemlworkflow": [2, 16], "feedback": [0, 2, 13, 16], "binaryfeedback": 2, "modelfeedback": 2, "multiclassfeedback": 2, "qualitativefeedback": 2, "regressionfeedback": 2, "simplefeedback": 2, "harvest": [0, 2, 16], "imageharvest": 2, "inputharvest": [2, 16], "queryparameterharvest": [2, 16], "textharvest": [2, 16], "postprocess": [0, 2, 14, 16], "binaryclassif": 2, "multiclassclassif": 2, "objectdetect": 2, "regress": [2, 4, 15, 16], "preprocess": [0, 2, 14, 16], "barchartrend": [2, 16], "containerrend": [2, 16], "dashboardreplacementrend": [2, 16], "documentrend": 2, "doughnutchartrend": [2, 16], "filterrend": [2, 16], "htmltagrend": [2, 16], "imagerend": 2, "linechartrend": [2, 16], "objectrend": [2, 16], "piechartrend": [2, 16], "sosrend": [2, 16], "tablerend": [2, 16], "wordrend": 2, "graphconfigur": [0, 16, 17], "add_nod": 2, "auto_run": 2, "compil": 2, "descript": 2, "get_filenam": 2, "mlflow_token": 2, "mlflow_uri": 2, "mlflow_us": 2, "name": [2, 11, 13, 14, 16], "owner": 2, "url": [2, 3, 13, 16], "version": [2, 16], "modelconfigur": [0, 16, 17], "analytic_dict": 2, "feedback_dict": 2, "feedback_step": [2, 16], "get_model_filenam": 2, "harvester_dict": 2, "harvesting_step": 2, "postprocesser_dict": 2, "postprocessing_step": 2, "preprocesser_dict": 2, "preprocessing_step": 2, "render_dict": 2, "rendering_step": 2, "log": [0, 13, 16, 17], "platform": [0, 16, 17], "aisquaredplatformcli": [0, 17], "aisquaredapiexcept": [0, 13], "add_user_to_group": [], "base_url": 13, "delete_model": 13, "get_model": [0, 13, 15], "get_model_id_by_nam": 13, "get_user_id_by_nam": 13, "get_user_usage_metr": 13, "header": [2, 3, 13, 16], "list_group_us": 13, "list_group": 13, "list_model_feedback": 13, "list_model_prediction_feedback": 13, "list_model_predict": 13, "list_model_us": 13, "list_model": 13, "list_prediction_feedback": 13, "list_us": 13, "login": 13, "password": 13, "remove_user_from_group": [], "share_model_with_group": 13, "share_model_with_us": 13, "test_connect": 13, "token": [7, 10, 13, 16], "unshare_model_with_us": 13, "upload_model": 13, "usernam": 13, "serv": [0, 16, 17], "deploy_model": [0, 16, 17], "load_mann_model": [0, 14], "get_remote_predict": [0, 16, 17], "util": [0, 2, 7, 12, 13, 14, 16, 17], "mimic_model": [0, 15, 16], "thi": [0, 1, 2, 12, 13, 16], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16], "interact": [0, 3, 13, 16], "ai": [0, 2, 13, 16], "squar": [0, 2, 13, 16], "technologi": [0, 1, 16], "stack": [0, 16], "particularli": [0, 16], "develop": [0, 16], "deploi": [0, 2, 14, 16], "model": [0, 2, 3, 4, 13, 14, 15, 16], "browser": 0, "extens": 0, "other": [0, 1, 16], "applic": [0, 2, 14, 16], "through": [0, 16], "javascript": [0, 2, 16], "sdk": [0, 2, 16], "class": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 16], "sourc": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15], "object": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16], "us": [1, 2, 13, 14, 15, 16], "all": [1, 2, 3, 5, 8, 9, 10, 13, 16], "within": [1, 12, 13, 16], "get": [1, 2, 3, 5, 6, 8, 9, 10, 11, 13, 15], "dictionari": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14], "return": [1, 2, 4, 11, 13, 14, 15], "json": [1, 13, 16], "string": [1, 14, 16], "class_nam": 1, "kwarg": 1, "custom": [1, 14, 16], "allow": [1, 15, 16], "user": [1, 5, 13, 16], "defin": [1, 15], "configur": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15], "some": 1, "paramet": [1, 2, 4, 5, 13, 14, 15, 16], "meant": 1, "directli": [1, 16], "call": [1, 13], "end": 1, "design": 1, "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "both": [1, 16], "basic": 1, "ar": [1, 6, 11, 13, 14], "across": 1, "backend": 1, "which": [1, 2, 7, 11, 13, 14, 16], "facilit": 1, "simpl": [1, 4, 14], "case": [1, 15], "input_typ": [2, 3, 5, 16], "secret": [2, 3], "path": [2, 3, 13, 14], "bucket": [2, 3], "column": [2, 3, 7, 9, 11], "filenam": [2, 3], "period": [2, 3, 13], "label_map": [2, 4, 6], "add_quest": [2, 4], "how": [2, 4, 5, 6, 11, 14, 15], "featur": [2, 5], "max_length": [2, 5], "attribut": [2, 5], "query_kei": [2, 5], "url_loc": [2, 5], "body_onli": [2, 5, 16], "flag": [2, 5, 16], "limit": [2, 5, 16], "regex": [2, 5], "threshold": [2, 6], "max": [2, 6, 7, 9], "min": [2, 6, 7, 9], "round": [2, 6, 16], "imag": [2, 5, 7, 11, 16], "imagepreprocess": [2, 7], "step": [2, 7, 16], "tabular": [2, 7, 16], "tabularpreprocess": [2, 7], "text": [2, 3, 4, 5, 7, 11, 16], "textpreprocess": [2, 7], "displai": [2, 11, 13], "height": [2, 11], "id": [2, 11, 13], "label": [2, 11], "orient": [2, 11], "posit": [2, 11], "query_selector": [2, 11], "width": [2, 11], "xoffset": [2, 11], "yoffset": [2, 11], "anchor_selector": [2, 11], "where_replac": [2, 11], "document": [2, 11, 13], "include_prob": [2, 11], "prediction_kei": [2, 11], "probability_kei": [2, 11], "threshold_kei": [2, 11, 16], "threshold_valu": [2, 11, 16], "underline_color": [2, 11], "word": [2, 11], "kei": [2, 11], "qualifi": [2, 11, 16], "valu": [2, 7, 8, 9, 11], "badge_color": [2, 11], "color": [2, 7, 8, 11], "font_color": [2, 11], "font_siz": [2, 11], "placement": [2, 11], "thick": [2, 11], "can_toggl": [2, 11], "badge_shap": [2, 11], "content_kei": [2, 11], "result_kei": [2, 11], "word_list": [2, 11], "experiment": 2, "none": [1, 2, 3, 5, 6, 8, 9, 10, 11, 13, 14, 15], "fals": [2, 3, 5, 6, 8, 10, 11, 15], "set": 2, "process": [2, 14, 16], "depend": 2, "graph": 2, "add": [2, 4, 8, 9, 10, 16], "node": 2, "int": [2, 3, 5, 6, 8, 9, 10, 11, 13, 14, 15], "list": [2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16], "must": 2, "run": [2, 13, 16], "befor": [2, 13], "ad": [2, 16], "node_id": 2, "integ": [2, 10], "i": [1, 2, 4, 11, 12, 13, 14, 15, 16], "type": [2, 7, 13, 14, 15, 16], "properti": [2, 3, 4, 5, 6, 8, 9, 10, 11, 13], "dtype": 2, "air": [2, 13], "file": [2, 3, 13, 14, 16], "can": [2, 16], "drag": 2, "drop": [2, 9], "like": [2, 13, 14, 15], "default": [2, 4, 13, 14, 15, 16], "If": [2, 13, 14], "where": 2, "str": [1, 2, 3, 4, 5, 8, 10, 11, 13, 14, 15], "datatyp": [2, 16], "weight": 2, "when": [2, 13, 14, 15], "kera": [2, 14, 15], "float32": 2, "request": [3, 13, 14], "remot": [3, 16], "an": [3, 4, 8, 11, 14, 16], "lookup": 3, "tabl": [3, 11], "save": [3, 14], "local": [3, 14, 16], "system": [3, 13], "current": [3, 15, 16], "reverseml": 3, "csv": 3, "store": [3, 14], "s3": [3, 16], "subpackag": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17], "individu": [3, 4, 11], "binari": [4, 6], "classif": [4, 6, 15], "question": 4, "answer": 4, "answer_typ": 4, "singlechoic": 4, "choic": 4, "ask": [4, 13], "One": [4, 9, 15], "either": [4, 15], "multichoic": 4, "provid": [4, 9, 13], "multiclass": [4, 6], "predict": [4, 6, 11, 13, 14, 16], "thumb": 4, "up": [4, 16], "down": 4, "input": [5, 10, 11, 15, 16], "queri": 5, "gu": 5, "keyword": [5, 16], "data": [5, 7, 8, 9, 10, 11, 13, 14, 15, 16], "0": [6, 8, 9, 10, 11, 14, 15, 16], "5": [6, 11, 15], "postprocesss": 6, "detect": [6, 11], "imagepreprocessor": [7, 8], "add_step": [7, 8, 9, 10], "step_dict": [7, 8, 10], "addvalu": [7, 8], "converttocolor": [7, 8], "dividevalu": [7, 8], "multiplyvalu": [7, 8, 16], "resiz": [7, 8], "method": [7, 8, 13, 16], "preserve_aspect_ratio": [7, 8], "size": [7, 8, 15], "subtractvalu": [7, 8], "dropcolumn": [7, 9], "minmax": [7, 9], "onehot": [7, 9], "zscore": [7, 9], "mean": [7, 9], "std": [7, 9], "tabularpreprocessor": [7, 9], "converttocas": [7, 10], "lowercas": [7, 10], "converttovocabulari": [7, 10], "max_vocab": [7, 10], "oov_charact": [7, 10], "start_charact": [7, 10], "vocabulari": [7, 10], "padsequ": [7, 10], "length": [7, 10], "pad_charact": [7, 10], "pad_loc": [7, 10], "truncate_loc": [7, 10], "removecharact": [7, 10], "remove_digit": [7, 10], "remove_punctu": [7, 10], "split_sent": [7, 10], "split_word": [7, 10], "token_pattern": [7, 10], "trim": [7, 10, 16], "textpreprocessor": [7, 10], "pipelin": [7, 16], "It": 7, "three": [7, 9], "separ": [7, 14], "differ": [7, 15], "preprocessor": [8, 9, 10], "pixel": 8, "convert": [8, 10], "scheme": 8, "divid": [8, 9], "multipli": 8, "bilinear": 8, "subtract": [8, 9], "from": [8, 9, 10, 12, 13, 14, 16], "scale": 9, "take": 9, "associ": [9, 13], "map": 9, "rel": 9, "minimum": 9, "maximum": [9, 15], "train": [9, 14, 15, 16], "hot": 9, "encod": 9, "z": 9, "score": 9, "normal": 9, "each": 9, "suppli": 9, "": [9, 13], "standard": 9, "deviat": 9, "true": [5, 10, 11, 13], "uppercas": 10, "1": [9, 10, 14, 16], "2": [8, 9, 10, 11, 16], "128": 10, "post": 10, "pad": 10, "sequenc": 10, "remov": [10, 16], "charact": 10, "x08": 10, "w": 10, "whitespac": 10, "natur": 10, "languag": 10, "chart_nam": 11, "chart_color": 11, "chart_label": 11, "container_id": 11, "prediction_name_kei": 11, "prediction_value_kei": 11, "prediction_name_valu": 11, "auto": [11, 16], "bar": [1, 11], "chart": 11, "flex": 11, "dashboard": 11, "replac": 11, "classnam": [1, 3, 4, 5, 6, 11], "probabl": [11, 15], "blue": 11, "dictat": 11, "entir": 11, "display_legend": 11, "legend_icon": 11, "doughnut": 11, "pass": 11, "downstream": 11, "html_content": 11, "extra_content_tag": 11, "injection_act": 11, "html": 11, "tag": 11, "5px": [], "bottomleft": 11, "white": 11, "black": 11, "line": [11, 16], "pie": 11, "so": [11, 13], "table_nam": 11, "star": 11, "badg": [11, 16], "occur": 11, "perform": [4, 12, 15], "experi": 12, "function": [12, 13, 14, 15, 16], "inheret": 12, "mlflow": 12, "pleas": [2, 12, 13, 15], "see": [12, 13, 15], "mflow": 12, "documentat": 12, "http": [2, 12, 13, 15, 16], "org": 12, "except": 13, "client": 13, "programmat": [13, 16], "first": 13, "time": 13, "import": [1, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16], "do": [13, 14], "ani": [1, 4, 13, 14], "requir": [13, 16], "inform": 13, "group_id": 13, "user_id": 13, "Not": 13, "yet": 13, "implement": 13, "port": [13, 14], "8080": 13, "delet": [13, 16], "api": [13, 16], "success": 13, "whether": 13, "action": 13, "wa": [13, 15], "bool": [2, 3, 5, 6, 8, 10, 11, 13, 15], "retriev": [13, 14], "metadata": 13, "about": 13, "coupl": 13, "model_nam": 13, "model_id": 13, "as_df": 13, "8083": 13, "group": 13, "respons": 13, "panda": 13, "datafram": 13, "result": 13, "model_us": 13, "prediction_id": 13, "share": 13, "test": [10, 13, 15], "healthi": 13, "connect": 13, "status_cod": 13, "statu": 13, "code": 13, "check": [13, 16], "health": 13, "unshar": 13, "model_fil": 13, "8081": 13, "upload": [13, 16], "primari": 13, "ha": 13, "capabl": [13, 16], "much": 13, "For": [2, 13, 15], "more": 13, "its": 13, "saved_model": 14, "model_typ": [14, 15], "host": [14, 16], "127": 14, "2244": 14, "custom_object": 14, "additional_functions_fil": 14, "flask": 14, "server": 14, "specifi": 14, "directori": 14, "dict": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14], "load": 14, "mann": 14, "addit": [4, 14, 15], "have": [13, 14], "creat": [13, 14, 16], "dure": 14, "send": 14, "np": 14, "ndarrai": [14, 15], "note": 14, "expect": 14, "alreadi": [14, 15], "correctli": 14, "format": [14, 16], "rest": 14, "endpoint": 14, "input_shap": 15, "num_output": 15, "output_activ": 15, "small": [15, 16], "vocab_s": 15, "pre": 15, "cv": 15, "nlp_embed": 15, "fc": 15, "tupl": 15, "shape": 15, "output": 15, "activ": [13, 15], "final": 15, "layer": 15, "medium": 15, "larg": 15, "vocab": 15, "tensorflow": 15, "trained_model": 15, "nnet": 15, "training_data": 15, "test_data": 15, "test_label": 15, "problem_typ": 15, "loss": 15, "metric": [13, 15], "optim": 15, "mimic_proba": 15, "retent": 15, "9": 15, "batch_siz": 15, "32": 15, "epoch": 15, "100": [6, 8, 15], "starting_sparsif": 15, "max_sparsif": 15, "99": 15, "sparsification_r": 15, "spars": 15, "neural": 15, "network": 15, "mimic": [15, 16], "scikit": 15, "learn": 15, "sklearn": [15, 16], "arrai": 15, "problem": 15, "measur": 15, "float": [6, 8, 11, 15], "further": 15, "prune": 15, "batch": 15, "while": 15, "number": 15, "earli": 15, "stop": 15, "met": 15, "beforehand": 15, "start": 15, "sparsif": 15, "rate": 15, "invok": 15, "index": [], "modul": [16, 17], "search": 13, "page": 16, "packag": 17, "content": [16, 17], "you": 13, "never": 13, "follow": [13, 16], "200": 13, "python": [], "rather": 1, "throughout": 1, "parent": 1, "includ": [13, 16], "my_awesome_model": 13, "authent": 13, "enter": 13, "my_model_filenam": 13, "your": 13, "email": 13, "your_domain": 13, "com": [2, 13, 15, 16], "hidden": 13, "exampl": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15], "usag": [1, 3, 4, 5, 6, 8, 9, 10, 11, 13], "my_obj": [1, 4, 5, 6, 11], "myclass": 1, "param": [1, 3, 4, 5, 6, 11], "key1": 1, "foo": 1, "key2": 1, "here": 14, "assum": 14, "memori": 14, "save_keras_model": 14, "my_model": 14, "option": [1, 2, 3, 5, 6, 8, 9, 10, 11, 13, 14, 16], "app": 14, "successfullli": 14, "await": 14, "termin": 14, "need": 14, "chang": [14, 16], "same": 14, "machin": 14, "analytic_url": 3, "inputtyp": [3, 5], "model_url": 3, "analytic_path": 3, "model_path": 3, "bucket_nam": 3, "file_nam": 3, "column_nam": 3, "And": 14, "These": 15, "consist": 15, "two": [9, 15, 16], "thei": 15, "exist": 15, "our": [2, 15], "open": 15, "beyondml": [15, 16], "teacher": 15, "student": 15, "To": 15, "depth": [2, 15], "visit": [2, 15], "github": [2, 15, 16], "repositori": [2, 15], "aisquaredinc": [2, 15, 16], "mimicmodelexampl": 15, "class1": [4, 6], "class2": [4, 6], "labelmap": [4, 6], "veri": 4, "poorli": 4, "neutral": 4, "well": 4, "answertyp": 4, "class3": [4, 6], "maxlength": 5, "test_kei": 5, "test_url": 5, "test_attribut": 5, "querykei": 5, "urlloc": 5, "bodyonli": 5, "build": 2, "out": 2, "librari": 2, "airfil": [2, 16], "10": 6, "255": 8, "rgb": 8, "3": [9, 10, 16], "14": 9, "18": 9, "6": 9, "one": 9, "4": [9, 10], "union": [2, 5, 6, 8, 9, 11, 13, 14, 15], "my": 11, "barchart1label": 11, "mybarchart": 11, "red": 11, "label1": 11, "label2": 11, "my_contain": 11, "chartnam": 11, "chartcolor": 11, "chartlabel": 11, "containerid": 11, "predictionnamekei": 11, "predictionvaluekei": 11, "predictionnamevalu": 11, "mycontainerid": 11, "tabpanel": 11, "gener": 11, "queryselector": 11, "test_anchor_selector": 11, "anchorselector": 11, "wherereplac": 11, "predictionkei": 11, "includeprob": 11, "probabilitykei": 11, "underlinecolor": 11, "thresholdkei": 11, "thresholdvalu": 11, "mydoughnutchartid": 11, "mydoughnutchart": 11, "my_countainer_id": 11, "circl": 11, "displaylegend": 11, "legendicon": 11, "gt": 11, "myhtmltagrenderingid": 11, "p": 11, "extra_tag": 11, "append": 11, "name_kei": 11, "value_kei": 11, "name_valu": 11, "htmlcontent": 11, "extracontenttag": 11, "injectionact": 11, "badgecolor": 11, "fontcolor": 11, "fontsiz": 11, "mylinechartid": 11, "mylinechart": 11, "mypiechartid": 11, "mypiechart": 11, "cantoggl": 11, "mytableid": 11, "tablenam": 11, "wordlist": 11, "resultkei": 11, "contentkei": 11, "badgeshap": 11, "baseestim": 15, "instal": [], "avail": 16, "pypi": 16, "command": 16, "bash": [], "pip": 16, "altern": 16, "latest": 16, "softwar": 16, "git": 16, "_": [], "regular": 16, "express": 16, "model_feedback": 16, "documentpredictor": 16, "imagepredictor": 16, "non": 16, "allowed_stag": 16, "fix": 16, "bug": 16, "prevent": 16, "window": 16, "updat": [13, 16], "move": 16, "under": 16, "specif": 16, "kind": 16, "clean": 16, "access": 16, "environ": 16, "cli": 16, "subcommand": 16, "download": 16, "accept": 16, "top": 16, "level": 16, "chainrend": 16, "alter": 16, "advanc": 16, "s3connector": 16, "doc": 16, "subdirectori": 16, "underlin": 16, "possibl": 16, "relev": 16, "creation": 16, "streamlin": 16, "full": 16, "deploy": 16, "hood": 16, "hint": 16, "revamp": 16, "sphinx": 16, "product": 16, "backward": 16, "compat": 16, "older": 16, "top_level_kwarg": 1, "get_model_usage_metr": 13, "hourli": 13, "given": 13, "view": 16, "pdf": 16, "_build": [], "latex": [], "add_users_to_group": 13, "8086": 13, "create_group": 13, "group_nam": 13, "role_id": 13, "role": 13, "group_info": 13, "create_us": 13, "user_nam": 13, "first_nam": 13, "last_nam": 13, "middle_nam": 13, "company_id": 13, "8085": 13, "delete_group": 13, "delete_us": 13, "get_group": 13, "get_group_id_by_nam": 13, "get_us": 13, "user_info": 13, "remove_users_from_group": 13, "unshare_model_with_group": 13, "update_group": 13, "display_nam": 13, "update_us": 13}, "objects": {"": [[0, 0, 0, "-", "aisquared"]], "aisquared": [[1, 0, 0, "-", "base"], [2, 0, 0, "-", "config"], [12, 0, 0, "-", "logging"], [13, 0, 0, "-", "platform"], [14, 0, 0, "-", "serving"], [15, 0, 0, "-", "utils"]], "aisquared.base": [[1, 0, 0, "-", "BaseObject"], [1, 0, 0, "-", "CustomObject"], [1, 0, 0, "-", "rendering"], [1, 0, 0, "-", "stages"]], "aisquared.base.BaseObject": [[1, 1, 1, "", "BaseObject"]], "aisquared.base.BaseObject.BaseObject": [[1, 2, 1, "", "to_dict"], [1, 2, 1, "", "to_json"]], "aisquared.base.CustomObject": [[1, 1, 1, "", "CustomObject"]], "aisquared.base.CustomObject.CustomObject": [[1, 2, 1, "", "to_dict"]], "aisquared.config": [[2, 0, 0, "-", "GraphConfiguration"], [2, 0, 0, "-", "ModelConfiguration"], [3, 0, 0, "-", "analytic"], [4, 0, 0, "-", "feedback"], [5, 0, 0, "-", "harvesting"], [6, 0, 0, "-", "postprocessing"], [7, 0, 0, "-", "preprocessing"], [11, 0, 0, "-", "rendering"]], "aisquared.config.GraphConfiguration": [[2, 1, 1, "", "GraphConfiguration"]], "aisquared.config.GraphConfiguration.GraphConfiguration": [[2, 2, 1, "", "add_node"], [2, 3, 1, "", "auto_run"], [2, 2, 1, "", "compile"], [2, 3, 1, "", "description"], [2, 2, 1, "", "get_filenames"], [2, 3, 1, "", "mlflow_token"], [2, 3, 1, "", "mlflow_uri"], [2, 3, 1, "", "mlflow_user"], [2, 3, 1, "", "name"], [2, 3, 1, "", "owner"], [2, 3, 1, "", "stage"], [2, 2, 1, "", "to_dict"], [2, 3, 1, "", "url"], [2, 3, 1, "", "version"]], "aisquared.config.ModelConfiguration": [[2, 1, 1, "", "ModelConfiguration"]], "aisquared.config.ModelConfiguration.ModelConfiguration": [[2, 3, 1, "", "analytic"], [2, 3, 1, "", "analytic_dict"], [2, 3, 1, "", "auto_run"], [2, 2, 1, "", "compile"], [2, 3, 1, "", "description"], [2, 3, 1, "", "feedback_dict"], [2, 3, 1, "", "feedback_steps"], [2, 2, 1, "", "get_model_filenames"], [2, 3, 1, "", "harvester_dict"], [2, 3, 1, "", "harvesting_steps"], [2, 3, 1, "", "mlflow_token"], [2, 3, 1, "", "mlflow_uri"], [2, 3, 1, "", "mlflow_user"], [2, 3, 1, "", "name"], [2, 3, 1, "", "owner"], [2, 3, 1, "", "postprocesser_dict"], [2, 3, 1, "", "postprocessing_steps"], [2, 3, 1, "", "preprocesser_dict"], [2, 3, 1, "", "preprocessing_steps"], [2, 3, 1, "", "render_dict"], [2, 3, 1, "", "rendering_steps"], [2, 3, 1, "", "stage"], [2, 2, 1, "", "to_dict"], [2, 3, 1, "", "url"], [2, 3, 1, "", "version"]], "aisquared.config.analytic": [[3, 0, 0, "-", "DeployedAnalytic"], [3, 0, 0, "-", "DeployedModel"], [3, 0, 0, "-", "LocalAnalytic"], [3, 0, 0, "-", "LocalModel"], [3, 0, 0, "-", "ReverseMLWorkflow"]], "aisquared.config.analytic.DeployedAnalytic": [[3, 1, 1, "", "DeployedAnalytic"]], "aisquared.config.analytic.DeployedAnalytic.DeployedAnalytic": [[3, 3, 1, "", "header"], [3, 3, 1, "", "input_type"], [3, 3, 1, "", "secret"], [3, 2, 1, "", "to_dict"], [3, 3, 1, "", "url"]], "aisquared.config.analytic.DeployedModel": [[3, 1, 1, "", "DeployedModel"]], "aisquared.config.analytic.DeployedModel.DeployedModel": [[3, 3, 1, "", "header"], [3, 3, 1, "", "input_type"], [3, 3, 1, "", "secret"], [3, 2, 1, "", "to_dict"], [3, 3, 1, "", "url"]], "aisquared.config.analytic.LocalAnalytic": [[3, 1, 1, "", "LocalAnalytic"]], "aisquared.config.analytic.LocalAnalytic.LocalAnalytic": [[3, 3, 1, "", "all"], [3, 3, 1, "", "input_type"], [3, 3, 1, "", "path"], [3, 2, 1, "", "to_dict"]], "aisquared.config.analytic.LocalModel": [[3, 1, 1, "", "LocalModel"]], "aisquared.config.analytic.LocalModel.LocalModel": [[3, 3, 1, "", "input_type"], [3, 3, 1, "", "path"], [3, 2, 1, "", "to_dict"]], "aisquared.config.analytic.ReverseMLWorkflow": [[3, 1, 1, "", "ReverseMLWorkflow"]], "aisquared.config.analytic.ReverseMLWorkflow.ReverseMLWorkflow": [[3, 3, 1, "", "bucket"], [3, 3, 1, "", "column"], [3, 3, 1, "", "filename"], [3, 3, 1, "", "input_type"], [3, 3, 1, "", "period"], [3, 3, 1, "", "secret"], [3, 2, 1, "", "to_dict"]], "aisquared.config.feedback": [[4, 0, 0, "-", "BinaryFeedback"], [4, 0, 0, "-", "ModelFeedback"], [4, 0, 0, "-", "MulticlassFeedback"], [4, 0, 0, "-", "QualitativeFeedback"], [4, 0, 0, "-", "RegressionFeedback"], [4, 0, 0, "-", "SimpleFeedback"]], "aisquared.config.feedback.BinaryFeedback": [[4, 1, 1, "", "BinaryFeedback"]], "aisquared.config.feedback.BinaryFeedback.BinaryFeedback": [[4, 3, 1, "", "label_map"], [4, 2, 1, "", "to_dict"]], "aisquared.config.feedback.ModelFeedback": [[4, 1, 1, "", "ModelFeedback"]], "aisquared.config.feedback.ModelFeedback.ModelFeedback": [[4, 2, 1, "", "add_question"], [4, 2, 1, "", "to_dict"]], "aisquared.config.feedback.MulticlassFeedback": [[4, 1, 1, "", "MulticlassFeedback"]], "aisquared.config.feedback.MulticlassFeedback.MulticlassFeedback": [[4, 3, 1, "", "label_map"], [4, 2, 1, "", "to_dict"]], "aisquared.config.feedback.QualitativeFeedback": [[4, 1, 1, "", "QualitativeFeedback"]], "aisquared.config.feedback.QualitativeFeedback.QualitativeFeedback": [[4, 2, 1, "", "add_question"], [4, 2, 1, "", "to_dict"]], "aisquared.config.feedback.RegressionFeedback": [[4, 1, 1, "", "RegressionFeedback"]], "aisquared.config.feedback.RegressionFeedback.RegressionFeedback": [[4, 2, 1, "", "to_dict"]], "aisquared.config.feedback.SimpleFeedback": [[4, 1, 1, "", "SimpleFeedback"]], "aisquared.config.feedback.SimpleFeedback.SimpleFeedback": [[4, 2, 1, "", "to_dict"]], "aisquared.config.harvesting": [[5, 0, 0, "-", "ImageHarvester"], [5, 0, 0, "-", "InputHarvester"], [5, 0, 0, "-", "QueryParameterHarvester"], [5, 0, 0, "-", "TextHarvester"]], "aisquared.config.harvesting.ImageHarvester": [[5, 1, 1, "", "ImageHarvester"]], "aisquared.config.harvesting.ImageHarvester.ImageHarvester": [[5, 3, 1, "", "how"], [5, 2, 1, "", "to_dict"]], "aisquared.config.harvesting.InputHarvester": [[5, 1, 1, "", "InputHarvester"]], "aisquared.config.harvesting.InputHarvester.InputHarvester": [[5, 3, 1, "", "features"], [5, 3, 1, "", "input_type"], [5, 3, 1, "", "max_length"], [5, 2, 1, "", "to_dict"]], "aisquared.config.harvesting.QueryParameterHarvester": [[5, 1, 1, "", "QueryParameterHarvester"]], "aisquared.config.harvesting.QueryParameterHarvester.QueryParameterHarvester": [[5, 3, 1, "", "attributes"], [5, 3, 1, "", "query_keys"], [5, 2, 1, "", "to_dict"], [5, 3, 1, "", "url_locations"]], "aisquared.config.harvesting.TextHarvester": [[5, 1, 1, "", "TextHarvester"]], "aisquared.config.harvesting.TextHarvester.TextHarvester": [[5, 3, 1, "", "body_only"], [5, 3, 1, "", "flags"], [5, 3, 1, "", "how"], [5, 3, 1, "", "limit"], [5, 3, 1, "", "regex"], [5, 2, 1, "", "to_dict"]], "aisquared.config.postprocessing": [[6, 0, 0, "-", "BinaryClassification"], [6, 0, 0, "-", "MulticlassClassification"], [6, 0, 0, "-", "ObjectDetection"], [6, 0, 0, "-", "Regression"]], "aisquared.config.postprocessing.BinaryClassification": [[6, 1, 1, "", "BinaryClassification"]], "aisquared.config.postprocessing.BinaryClassification.BinaryClassification": [[6, 3, 1, "", "label_map"], [6, 3, 1, "", "threshold"], [6, 2, 1, "", "to_dict"]], "aisquared.config.postprocessing.MulticlassClassification": [[6, 1, 1, "", "MulticlassClassification"]], "aisquared.config.postprocessing.MulticlassClassification.MulticlassClassification": [[6, 3, 1, "", "label_map"], [6, 2, 1, "", "to_dict"]], "aisquared.config.postprocessing.ObjectDetection": [[6, 1, 1, "", "ObjectDetection"]], "aisquared.config.postprocessing.ObjectDetection.ObjectDetection": [[6, 3, 1, "", "label_map"], [6, 3, 1, "", "threshold"], [6, 2, 1, "", "to_dict"]], "aisquared.config.postprocessing.Regression": [[6, 1, 1, "", "Regression"]], "aisquared.config.postprocessing.Regression.Regression": [[6, 3, 1, "", "max"], [6, 3, 1, "", "min"], [6, 3, 1, "", "round"], [6, 2, 1, "", "to_dict"]], "aisquared.config.preprocessing": [[8, 0, 0, "-", "image"], [9, 0, 0, "-", "tabular"], [10, 0, 0, "-", "text"]], "aisquared.config.preprocessing.image": [[8, 0, 0, "-", "ImagePreprocessing"], [8, 0, 0, "-", "Steps"]], "aisquared.config.preprocessing.image.ImagePreprocessing": [[8, 1, 1, "", "ImagePreprocessor"]], "aisquared.config.preprocessing.image.ImagePreprocessing.ImagePreprocessor": [[8, 2, 1, "", "add_step"], [8, 3, 1, "", "step_dict"], [8, 2, 1, "", "to_dict"]], "aisquared.config.preprocessing.image.Steps": [[8, 1, 1, "", "AddValue"], [8, 1, 1, "", "ConvertToColor"], [8, 1, 1, "", "DivideValue"], [8, 1, 1, "", "MultiplyValue"], [8, 1, 1, "", "Resize"], [8, 1, 1, "", "SubtractValue"]], "aisquared.config.preprocessing.image.Steps.AddValue": [[8, 2, 1, "", "to_dict"], [8, 3, 1, "", "value"]], "aisquared.config.preprocessing.image.Steps.ConvertToColor": [[8, 3, 1, "", "color"], [8, 2, 1, "", "to_dict"]], "aisquared.config.preprocessing.image.Steps.DivideValue": [[8, 2, 1, "", "to_dict"], [8, 3, 1, "", "value"]], "aisquared.config.preprocessing.image.Steps.MultiplyValue": [[8, 2, 1, "", "to_dict"], [8, 3, 1, "", "value"]], "aisquared.config.preprocessing.image.Steps.Resize": [[8, 3, 1, "", "method"], [8, 3, 1, "", "preserve_aspect_ratio"], [8, 3, 1, "", "size"], [8, 2, 1, "", "to_dict"]], "aisquared.config.preprocessing.image.Steps.SubtractValue": [[8, 2, 1, "", "to_dict"], [8, 3, 1, "", "value"]], "aisquared.config.preprocessing.tabular": [[9, 0, 0, "-", "Steps"], [9, 0, 0, "-", "TabularPreprocessing"]], "aisquared.config.preprocessing.tabular.Steps": [[9, 1, 1, "", "DropColumn"], [9, 1, 1, "", "MinMax"], [9, 1, 1, "", "OneHot"], [9, 1, 1, "", "ZScore"]], "aisquared.config.preprocessing.tabular.Steps.DropColumn": [[9, 3, 1, "", "column"], [9, 2, 1, "", "to_dict"]], "aisquared.config.preprocessing.tabular.Steps.MinMax": [[9, 3, 1, "", "columns"], [9, 3, 1, "", "maxs"], [9, 3, 1, "", "mins"], [9, 2, 1, "", "to_dict"]], "aisquared.config.preprocessing.tabular.Steps.OneHot": [[9, 3, 1, "", "column"], [9, 2, 1, "", "to_dict"], [9, 3, 1, "", "values"]], "aisquared.config.preprocessing.tabular.Steps.ZScore": [[9, 3, 1, "", "columns"], [9, 3, 1, "", "means"], [9, 3, 1, "", "stds"], [9, 2, 1, "", "to_dict"]], "aisquared.config.preprocessing.tabular.TabularPreprocessing": [[9, 1, 1, "", "TabularPreprocessor"]], "aisquared.config.preprocessing.tabular.TabularPreprocessing.TabularPreprocessor": [[9, 2, 1, "", "add_step"], [9, 2, 1, "", "to_dict"]], "aisquared.config.preprocessing.text": [[10, 0, 0, "-", "Steps"], [10, 0, 0, "-", "TextPreprocessing"]], "aisquared.config.preprocessing.text.Steps": [[10, 1, 1, "", "ConvertToCase"], [10, 1, 1, "", "ConvertToVocabulary"], [10, 1, 1, "", "PadSequences"], [10, 1, 1, "", "RemoveCharacters"], [10, 1, 1, "", "Tokenize"], [10, 1, 1, "", "Trim"]], "aisquared.config.preprocessing.text.Steps.ConvertToCase": [[10, 3, 1, "", "lowercase"], [10, 2, 1, "", "to_dict"]], "aisquared.config.preprocessing.text.Steps.ConvertToVocabulary": [[10, 3, 1, "", "max_vocab"], [10, 3, 1, "", "oov_character"], [10, 3, 1, "", "start_character"], [10, 2, 1, "", "to_dict"], [10, 3, 1, "", "vocabulary"]], "aisquared.config.preprocessing.text.Steps.PadSequences": [[10, 3, 1, "", "length"], [10, 3, 1, "", "pad_character"], [10, 3, 1, "", "pad_location"], [10, 2, 1, "", "to_dict"], [10, 3, 1, "", "truncate_location"]], "aisquared.config.preprocessing.text.Steps.RemoveCharacters": [[10, 3, 1, "", "remove_digits"], [10, 3, 1, "", "remove_punctuation"], [10, 2, 1, "", "to_dict"]], "aisquared.config.preprocessing.text.Steps.Tokenize": [[10, 3, 1, "", "split_sentences"], [10, 3, 1, "", "split_words"], [10, 2, 1, "", "to_dict"], [10, 3, 1, "", "token_pattern"]], "aisquared.config.preprocessing.text.Steps.Trim": [[10, 2, 1, "", "to_dict"]], "aisquared.config.preprocessing.text.TextPreprocessing": [[10, 1, 1, "", "TextPreprocessor"]], "aisquared.config.preprocessing.text.TextPreprocessing.TextPreprocessor": [[10, 2, 1, "", "add_step"], [10, 3, 1, "", "step_dict"], [10, 2, 1, "", "to_dict"]], "aisquared.config.rendering": [[11, 0, 0, "-", "BarChartRendering"], [11, 0, 0, "-", "ContainerRendering"], [11, 0, 0, "-", "DashboardReplacementRendering"], [11, 0, 0, "-", "DocumentRendering"], [11, 0, 0, "-", "DoughnutChartRendering"], [11, 0, 0, "-", "FilterRendering"], [11, 0, 0, "-", "HTMLTagRendering"], [11, 0, 0, "-", "ImageRendering"], [11, 0, 0, "-", "LineChartRendering"], [11, 0, 0, "-", "ObjectRendering"], [11, 0, 0, "-", "PieChartRendering"], [11, 0, 0, "-", "SOSRendering"], [11, 0, 0, "-", "TableRendering"], [11, 0, 0, "-", "WordRendering"]], "aisquared.config.rendering.BarChartRendering": [[11, 1, 1, "", "BarChartRendering"]], "aisquared.config.rendering.BarChartRendering.BarChartRendering": [[11, 2, 1, "", "to_dict"]], "aisquared.config.rendering.ContainerRendering": [[11, 1, 1, "", "ContainerRendering"]], "aisquared.config.rendering.ContainerRendering.ContainerRendering": [[11, 3, 1, "", "display"], [11, 3, 1, "", "height"], [11, 3, 1, "", "id"], [11, 3, 1, "", "label"], [11, 3, 1, "", "orientation"], [11, 3, 1, "", "position"], [11, 3, 1, "", "query_selector"], [11, 2, 1, "", "to_dict"], [11, 3, 1, "", "width"], [11, 3, 1, "", "xOffset"], [11, 3, 1, "", "yOffset"]], "aisquared.config.rendering.DashboardReplacementRendering": [[11, 1, 1, "", "DashboardReplacementRendering"]], "aisquared.config.rendering.DashboardReplacementRendering.DashboardReplacementRendering": [[11, 3, 1, "", "anchor_selector"], [11, 3, 1, "", "label"], [11, 2, 1, "", "to_dict"], [11, 3, 1, "", "where_replace"]], "aisquared.config.rendering.DocumentRendering": [[11, 1, 1, "", "DocumentRendering"]], "aisquared.config.rendering.DocumentRendering.DocumentRendering": [[11, 3, 1, "", "classes"], [11, 3, 1, "", "documents"], [11, 3, 1, "", "include_probability"], [11, 3, 1, "", "prediction_key"], [11, 3, 1, "", "probability_key"], [11, 3, 1, "", "threshold_key"], [11, 3, 1, "", "threshold_value"], [11, 2, 1, "", "to_dict"], [11, 3, 1, "", "underline_color"], [11, 3, 1, "", "words"]], "aisquared.config.rendering.DoughnutChartRendering": [[11, 1, 1, "", "DoughnutChartRendering"]], "aisquared.config.rendering.DoughnutChartRendering.DoughnutChartRendering": [[11, 2, 1, "", "to_dict"]], "aisquared.config.rendering.FilterRendering": [[11, 1, 1, "", "FilterRendering"]], "aisquared.config.rendering.FilterRendering.FilterRendering": [[11, 3, 1, "", "key"], [11, 3, 1, "", "qualifier"], [11, 3, 1, "", "source"], [11, 2, 1, "", "to_dict"], [11, 3, 1, "", "value"]], "aisquared.config.rendering.HTMLTagRendering": [[11, 1, 1, "", "HTMLTagRendering"]], "aisquared.config.rendering.HTMLTagRendering.HTMLTagRendering": [[11, 2, 1, "", "to_dict"]], "aisquared.config.rendering.ImageRendering": [[11, 1, 1, "", "ImageRendering"]], "aisquared.config.rendering.ImageRendering.ImageRendering": [[11, 3, 1, "", "badge_color"], [11, 3, 1, "", "classes"], [11, 3, 1, "", "color"], [11, 3, 1, "", "font_color"], [11, 3, 1, "", "font_size"], [11, 3, 1, "", "include_probability"], [11, 3, 1, "", "placement"], [11, 3, 1, "", "thickness"], [11, 3, 1, "", "threshold_key"], [11, 3, 1, "", "threshold_value"], [11, 2, 1, "", "to_dict"]], "aisquared.config.rendering.LineChartRendering": [[11, 1, 1, "", "LineChartRendering"]], "aisquared.config.rendering.LineChartRendering.LineChartRendering": [[11, 2, 1, "", "to_dict"]], "aisquared.config.rendering.ObjectRendering": [[11, 1, 1, "", "ObjectRendering"]], "aisquared.config.rendering.ObjectRendering.ObjectRendering": [[11, 3, 1, "", "badge_color"], [11, 3, 1, "", "color"], [11, 3, 1, "", "font_color"], [11, 3, 1, "", "font_size"], [11, 3, 1, "", "include_probability"], [11, 3, 1, "", "placement"], [11, 3, 1, "", "thickness"], [11, 2, 1, "", "to_dict"]], "aisquared.config.rendering.PieChartRendering": [[11, 1, 1, "", "PieChartRendering"]], "aisquared.config.rendering.PieChartRendering.PieChartRendering": [[11, 2, 1, "", "to_dict"]], "aisquared.config.rendering.SOSRendering": [[11, 1, 1, "", "SOSRendering"]], "aisquared.config.rendering.SOSRendering.SOSRendering": [[11, 3, 1, "", "can_toggle"], [11, 3, 1, "", "label"], [11, 2, 1, "", "to_dict"]], "aisquared.config.rendering.TableRendering": [[11, 1, 1, "", "TableRendering"]], "aisquared.config.rendering.TableRendering.TableRendering": [[11, 2, 1, "", "to_dict"]], "aisquared.config.rendering.WordRendering": [[11, 1, 1, "", "WordRendering"]], "aisquared.config.rendering.WordRendering.WordRendering": [[11, 3, 1, "", "badge_color"], [11, 3, 1, "", "badge_shape"], [11, 3, 1, "", "classes"], [11, 3, 1, "", "content_key"], [11, 3, 1, "", "result_key"], [11, 3, 1, "", "threshold_key"], [11, 3, 1, "", "threshold_value"], [11, 2, 1, "", "to_dict"], [11, 3, 1, "", "word_list"]], "aisquared.platform": [[13, 0, 0, "-", "AISquaredPlatformClient"]], "aisquared.platform.AISquaredPlatformClient": [[13, 4, 1, "", "AISquaredAPIException"], [13, 1, 1, "", "AISquaredPlatformClient"]], "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient": [[13, 2, 1, "", "add_users_to_group"], [13, 3, 1, "", "base_url"], [13, 2, 1, "", "create_group"], [13, 2, 1, "", "create_user"], [13, 2, 1, "", "delete_group"], [13, 2, 1, "", "delete_model"], [13, 2, 1, "", "delete_user"], [13, 2, 1, "", "get_group"], [13, 2, 1, "", "get_group_id_by_name"], [13, 2, 1, "", "get_model"], [13, 2, 1, "", "get_model_id_by_name"], [13, 2, 1, "", "get_model_usage_metrics"], [13, 2, 1, "", "get_user"], [13, 2, 1, "", "get_user_id_by_name"], [13, 2, 1, "", "get_user_usage_metrics"], [13, 3, 1, "", "headers"], [13, 2, 1, "", "list_group_users"], [13, 2, 1, "", "list_groups"], [13, 2, 1, "", "list_model_feedback"], [13, 2, 1, "", "list_model_prediction_feedback"], [13, 2, 1, "", "list_model_predictions"], [13, 2, 1, "", "list_model_users"], [13, 2, 1, "", "list_models"], [13, 2, 1, "", "list_prediction_feedback"], [13, 2, 1, "", "list_users"], [13, 2, 1, "", "login"], [13, 3, 1, "", "password"], [13, 2, 1, "", "remove_users_from_group"], [13, 2, 1, "", "share_model_with_group"], [13, 2, 1, "", "share_model_with_user"], [13, 2, 1, "", "test_connection"], [13, 3, 1, "", "token"], [13, 2, 1, "", "unshare_model_with_group"], [13, 2, 1, "", "unshare_model_with_user"], [13, 2, 1, "", "update_group"], [13, 2, 1, "", "update_user"], [13, 2, 1, "", "upload_model"], [13, 3, 1, "", "username"]], "aisquared.serving": [[14, 0, 0, "-", "deploy_model"], [14, 0, 0, "-", "get_remote_prediction"]], "aisquared.serving.deploy_model": [[14, 5, 1, "", "deploy_model"], [14, 5, 1, "", "load_mann_model"]], "aisquared.serving.get_remote_prediction": [[14, 5, 1, "", "get_remote_prediction"]], "aisquared.utils": [[15, 0, 0, "-", "utils"]], "aisquared.utils.utils": [[15, 5, 1, "", "get_model"], [15, 5, 1, "", "mimic_model"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:exception", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"]}, "titleterms": {"aisquar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "subpackag": [0, 2, 7], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "base": 1, "submodul": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15], "baseobject": 1, "customobject": 1, "render": [1, 11], "stage": 1, "config": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "graphconfigur": 2, "modelconfigur": 2, "analyt": 3, "deployedanalyt": 3, "deployedmodel": 3, "localanalyt": 3, "localmodel": 3, "reversemlworkflow": 3, "feedback": 4, "binaryfeedback": 4, "modelfeedback": 4, "multiclassfeedback": 4, "qualitativefeedback": 4, "regressionfeedback": 4, "simplefeedback": 4, "harvest": 5, "imageharvest": 5, "inputharvest": 5, "queryparameterharvest": 5, "textharvest": 5, "postprocess": 6, "binaryclassif": 6, "multiclassclassif": 6, "objectdetect": 6, "regress": 6, "preprocess": [7, 8, 9, 10], "imag": 8, "imagepreprocess": 8, "step": [8, 9, 10], "tabular": 9, "tabularpreprocess": 9, "text": 10, "textpreprocess": 10, "barchartrend": 11, "containerrend": 11, "dashboardreplacementrend": 11, "documentrend": 11, "doughnutchartrend": 11, "filterrend": 11, "htmltagrend": 11, "imagerend": 11, "linechartrend": 11, "objectrend": 11, "piechartrend": 11, "sosrend": 11, "tablerend": 11, "wordrend": 11, "log": 12, "platform": 13, "aisquaredplatformcli": 13, "serv": 14, "deploy_model": 14, "get_remote_predict": 14, "util": 15, "welcom": 16, "": [], "document": 16, "indic": [], "tabl": [], "instal": 16, "python": 16, "changelog": 16}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"aisquared": [[17, "aisquared"]], "aisquared package": [[0, "aisquared-package"]], "Module contents": [[0, "module-aisquared"], [1, "module-aisquared.base"], [2, "module-aisquared.config"], [3, "module-aisquared.config.analytic"], [4, "module-aisquared.config.feedback"], [5, "module-aisquared.config.harvesting"], [6, "module-aisquared.config.postprocessing"], [7, "module-aisquared.config.preprocessing"], [8, "module-aisquared.config.preprocessing.image"], [9, "module-aisquared.config.preprocessing.tabular"], [10, "module-aisquared.config.preprocessing.text"], [11, "module-aisquared.config.rendering"], [12, "module-aisquared.logging"], [13, "module-aisquared.platform"], [14, "module-aisquared.serving"], [15, "module-aisquared.utils"]], "Subpackages": [[0, "subpackages"], [2, "subpackages"], [7, "subpackages"]], "aisquared.base package": [[1, "aisquared-base-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"]], "aisquared.base.BaseObject module": [[1, "module-aisquared.base.BaseObject"]], "aisquared.base.CustomObject module": [[1, "module-aisquared.base.CustomObject"]], "aisquared.base.rendering module": [[1, "module-aisquared.base.rendering"]], "aisquared.base.stages module": [[1, "module-aisquared.base.stages"]], "aisquared.config package": [[2, "aisquared-config-package"]], "aisquared.config.GraphConfiguration module": [[2, "module-aisquared.config.GraphConfiguration"]], "aisquared.config.ModelConfiguration module": [[2, "module-aisquared.config.ModelConfiguration"]], "aisquared.config.analytic package": [[3, "aisquared-config-analytic-package"]], "aisquared.config.analytic.DeployedAnalytic module": [[3, "module-aisquared.config.analytic.DeployedAnalytic"]], "aisquared.config.analytic.DeployedModel module": [[3, "module-aisquared.config.analytic.DeployedModel"]], "aisquared.config.analytic.LocalAnalytic module": [[3, "module-aisquared.config.analytic.LocalAnalytic"]], "aisquared.config.analytic.LocalModel module": [[3, "module-aisquared.config.analytic.LocalModel"]], "aisquared.config.analytic.ReverseMLWorkflow module": [[3, "module-aisquared.config.analytic.ReverseMLWorkflow"]], "aisquared.config.feedback package": [[4, "aisquared-config-feedback-package"]], "aisquared.config.feedback.BinaryFeedback module": [[4, "module-aisquared.config.feedback.BinaryFeedback"]], "aisquared.config.feedback.ModelFeedback module": [[4, "module-aisquared.config.feedback.ModelFeedback"]], "aisquared.config.feedback.MulticlassFeedback module": [[4, "module-aisquared.config.feedback.MulticlassFeedback"]], "aisquared.config.feedback.QualitativeFeedback module": [[4, "module-aisquared.config.feedback.QualitativeFeedback"]], "aisquared.config.feedback.RegressionFeedback module": [[4, "module-aisquared.config.feedback.RegressionFeedback"]], "aisquared.config.feedback.SimpleFeedback module": [[4, "module-aisquared.config.feedback.SimpleFeedback"]], "aisquared.config.harvesting package": [[5, "aisquared-config-harvesting-package"]], "aisquared.config.harvesting.ImageHarvester module": [[5, "module-aisquared.config.harvesting.ImageHarvester"]], "aisquared.config.harvesting.InputHarvester module": [[5, "module-aisquared.config.harvesting.InputHarvester"]], "aisquared.config.harvesting.QueryParameterHarvester module": [[5, "module-aisquared.config.harvesting.QueryParameterHarvester"]], "aisquared.config.harvesting.TextHarvester module": [[5, "module-aisquared.config.harvesting.TextHarvester"]], "aisquared.config.postprocessing package": [[6, "aisquared-config-postprocessing-package"]], "aisquared.config.postprocessing.BinaryClassification module": [[6, "module-aisquared.config.postprocessing.BinaryClassification"]], "aisquared.config.postprocessing.MulticlassClassification module": [[6, "module-aisquared.config.postprocessing.MulticlassClassification"]], "aisquared.config.postprocessing.ObjectDetection module": [[6, "module-aisquared.config.postprocessing.ObjectDetection"]], "aisquared.config.postprocessing.Regression module": [[6, "module-aisquared.config.postprocessing.Regression"]], "aisquared.config.preprocessing package": [[7, "aisquared-config-preprocessing-package"]], "aisquared.config.preprocessing.image package": [[8, "aisquared-config-preprocessing-image-package"]], "aisquared.config.preprocessing.image.ImagePreprocessing module": [[8, "module-aisquared.config.preprocessing.image.ImagePreprocessing"]], "aisquared.config.preprocessing.image.Steps module": [[8, "module-aisquared.config.preprocessing.image.Steps"]], "aisquared.config.preprocessing.tabular package": [[9, "aisquared-config-preprocessing-tabular-package"]], "aisquared.config.preprocessing.tabular.Steps module": [[9, "module-aisquared.config.preprocessing.tabular.Steps"]], "aisquared.config.preprocessing.tabular.TabularPreprocessing module": [[9, "module-aisquared.config.preprocessing.tabular.TabularPreprocessing"]], "aisquared.config.preprocessing.text package": [[10, "aisquared-config-preprocessing-text-package"]], "aisquared.config.preprocessing.text.Steps module": [[10, "module-aisquared.config.preprocessing.text.Steps"]], "aisquared.config.preprocessing.text.TextPreprocessing module": [[10, "module-aisquared.config.preprocessing.text.TextPreprocessing"]], "aisquared.config.rendering package": [[11, "aisquared-config-rendering-package"]], "aisquared.config.rendering.BarChartRendering module": [[11, "module-aisquared.config.rendering.BarChartRendering"]], "aisquared.config.rendering.ContainerRendering module": [[11, "module-aisquared.config.rendering.ContainerRendering"]], "aisquared.config.rendering.DashboardReplacementRendering module": [[11, "module-aisquared.config.rendering.DashboardReplacementRendering"]], "aisquared.config.rendering.DocumentRendering module": [[11, "module-aisquared.config.rendering.DocumentRendering"]], "aisquared.config.rendering.DoughnutChartRendering module": [[11, "module-aisquared.config.rendering.DoughnutChartRendering"]], "aisquared.config.rendering.FilterRendering module": [[11, "module-aisquared.config.rendering.FilterRendering"]], "aisquared.config.rendering.HTMLTagRendering module": [[11, "module-aisquared.config.rendering.HTMLTagRendering"]], "aisquared.config.rendering.ImageRendering module": [[11, "module-aisquared.config.rendering.ImageRendering"]], "aisquared.config.rendering.LineChartRendering module": [[11, "module-aisquared.config.rendering.LineChartRendering"]], "aisquared.config.rendering.ObjectRendering module": [[11, "module-aisquared.config.rendering.ObjectRendering"]], "aisquared.config.rendering.PieChartRendering module": [[11, "module-aisquared.config.rendering.PieChartRendering"]], "aisquared.config.rendering.SOSRendering module": [[11, "module-aisquared.config.rendering.SOSRendering"]], "aisquared.config.rendering.TableRendering module": [[11, "module-aisquared.config.rendering.TableRendering"]], "aisquared.config.rendering.WordRendering module": [[11, "module-aisquared.config.rendering.WordRendering"]], "aisquared.logging package": [[12, "aisquared-logging-package"]], "aisquared.platform package": [[13, "aisquared-platform-package"]], "aisquared.platform.AISquaredPlatformClient module": [[13, "module-aisquared.platform.AISquaredPlatformClient"]], "aisquared.serving package": [[14, "aisquared-serving-package"]], "aisquared.serving.deploy_model module": [[14, "module-aisquared.serving.deploy_model"]], "aisquared.serving.get_remote_prediction module": [[14, "module-aisquared.serving.get_remote_prediction"]], "aisquared.utils package": [[15, "aisquared-utils-package"]], "aisquared.utils.utils module": [[15, "module-aisquared.utils.utils"]], "Welcome to the documentation for the aisquared python package!": [[16, "welcome-to-the-documentation-for-the-aisquared-python-package"]], "Installation": [[16, "installation"]], "Documentation": [[16, null]], "Changelog": [[16, "changelog"]]}, "indexentries": {"aisquared": [[0, "module-aisquared"]], "module": [[0, "module-aisquared"], [1, "module-aisquared.base"], [1, "module-aisquared.base.BaseObject"], [1, "module-aisquared.base.CustomObject"], [1, "module-aisquared.base.rendering"], [1, "module-aisquared.base.stages"], [2, "module-aisquared.config"], [2, "module-aisquared.config.GraphConfiguration"], [2, "module-aisquared.config.ModelConfiguration"], [3, "module-aisquared.config.analytic"], [3, "module-aisquared.config.analytic.DeployedAnalytic"], [3, "module-aisquared.config.analytic.DeployedModel"], [3, "module-aisquared.config.analytic.LocalAnalytic"], [3, "module-aisquared.config.analytic.LocalModel"], [3, "module-aisquared.config.analytic.ReverseMLWorkflow"], [4, "module-aisquared.config.feedback"], [4, "module-aisquared.config.feedback.BinaryFeedback"], [4, "module-aisquared.config.feedback.ModelFeedback"], [4, "module-aisquared.config.feedback.MulticlassFeedback"], [4, "module-aisquared.config.feedback.QualitativeFeedback"], [4, "module-aisquared.config.feedback.RegressionFeedback"], [4, "module-aisquared.config.feedback.SimpleFeedback"], [5, "module-aisquared.config.harvesting"], [5, "module-aisquared.config.harvesting.ImageHarvester"], [5, "module-aisquared.config.harvesting.InputHarvester"], [5, "module-aisquared.config.harvesting.QueryParameterHarvester"], [5, "module-aisquared.config.harvesting.TextHarvester"], [6, "module-aisquared.config.postprocessing"], [6, "module-aisquared.config.postprocessing.BinaryClassification"], [6, "module-aisquared.config.postprocessing.MulticlassClassification"], [6, "module-aisquared.config.postprocessing.ObjectDetection"], [6, "module-aisquared.config.postprocessing.Regression"], [7, "module-aisquared.config.preprocessing"], [8, "module-aisquared.config.preprocessing.image"], [8, "module-aisquared.config.preprocessing.image.ImagePreprocessing"], [8, "module-aisquared.config.preprocessing.image.Steps"], [9, "module-aisquared.config.preprocessing.tabular"], [9, "module-aisquared.config.preprocessing.tabular.Steps"], [9, "module-aisquared.config.preprocessing.tabular.TabularPreprocessing"], [10, "module-aisquared.config.preprocessing.text"], [10, "module-aisquared.config.preprocessing.text.Steps"], [10, "module-aisquared.config.preprocessing.text.TextPreprocessing"], [11, "module-aisquared.config.rendering"], [11, "module-aisquared.config.rendering.BarChartRendering"], [11, "module-aisquared.config.rendering.ContainerRendering"], [11, "module-aisquared.config.rendering.DashboardReplacementRendering"], [11, "module-aisquared.config.rendering.DocumentRendering"], [11, "module-aisquared.config.rendering.DoughnutChartRendering"], [11, "module-aisquared.config.rendering.FilterRendering"], [11, "module-aisquared.config.rendering.HTMLTagRendering"], [11, "module-aisquared.config.rendering.ImageRendering"], [11, "module-aisquared.config.rendering.LineChartRendering"], [11, "module-aisquared.config.rendering.ObjectRendering"], [11, "module-aisquared.config.rendering.PieChartRendering"], [11, "module-aisquared.config.rendering.SOSRendering"], [11, "module-aisquared.config.rendering.TableRendering"], [11, "module-aisquared.config.rendering.WordRendering"], [12, "module-aisquared.logging"], [13, "module-aisquared.platform"], [13, "module-aisquared.platform.AISquaredPlatformClient"], [14, "module-aisquared.serving"], [14, "module-aisquared.serving.deploy_model"], [14, "module-aisquared.serving.get_remote_prediction"], [15, "module-aisquared.utils"], [15, "module-aisquared.utils.utils"]], "baseobject (class in aisquared.base.baseobject)": [[1, "aisquared.base.BaseObject.BaseObject"]], "customobject (class in aisquared.base.customobject)": [[1, "aisquared.base.CustomObject.CustomObject"]], "aisquared.base": [[1, "module-aisquared.base"]], "aisquared.base.baseobject": [[1, "module-aisquared.base.BaseObject"]], "aisquared.base.customobject": [[1, "module-aisquared.base.CustomObject"]], "aisquared.base.rendering": [[1, "module-aisquared.base.rendering"]], "aisquared.base.stages": [[1, "module-aisquared.base.stages"]], "to_dict() (aisquared.base.baseobject.baseobject method)": [[1, "aisquared.base.BaseObject.BaseObject.to_dict"]], "to_dict() (aisquared.base.customobject.customobject method)": [[1, "aisquared.base.CustomObject.CustomObject.to_dict"]], "to_json() (aisquared.base.baseobject.baseobject method)": [[1, "aisquared.base.BaseObject.BaseObject.to_json"]], "graphconfiguration (class in aisquared.config.graphconfiguration)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration"]], "modelconfiguration (class in aisquared.config.modelconfiguration)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration"]], "add_node() (aisquared.config.graphconfiguration.graphconfiguration method)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.add_node"]], "aisquared.config": [[2, "module-aisquared.config"]], "aisquared.config.graphconfiguration": [[2, "module-aisquared.config.GraphConfiguration"]], "aisquared.config.modelconfiguration": [[2, "module-aisquared.config.ModelConfiguration"]], "analytic (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.analytic"]], "analytic_dict (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.analytic_dict"]], "auto_run (aisquared.config.graphconfiguration.graphconfiguration property)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.auto_run"]], "auto_run (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.auto_run"]], "compile() (aisquared.config.graphconfiguration.graphconfiguration method)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.compile"]], "compile() (aisquared.config.modelconfiguration.modelconfiguration method)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.compile"]], "description (aisquared.config.graphconfiguration.graphconfiguration property)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.description"]], "description (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.description"]], "feedback_dict (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.feedback_dict"]], "feedback_steps (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.feedback_steps"]], "get_filenames() (aisquared.config.graphconfiguration.graphconfiguration method)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.get_filenames"]], "get_model_filenames() (aisquared.config.modelconfiguration.modelconfiguration method)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.get_model_filenames"]], "harvester_dict (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.harvester_dict"]], "harvesting_steps (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.harvesting_steps"]], "mlflow_token (aisquared.config.graphconfiguration.graphconfiguration property)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.mlflow_token"]], "mlflow_token (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.mlflow_token"]], "mlflow_uri (aisquared.config.graphconfiguration.graphconfiguration property)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.mlflow_uri"]], "mlflow_uri (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.mlflow_uri"]], "mlflow_user (aisquared.config.graphconfiguration.graphconfiguration property)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.mlflow_user"]], "mlflow_user (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.mlflow_user"]], "name (aisquared.config.graphconfiguration.graphconfiguration property)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.name"]], "name (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.name"]], "owner (aisquared.config.graphconfiguration.graphconfiguration property)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.owner"]], "owner (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.owner"]], "postprocesser_dict (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.postprocesser_dict"]], "postprocessing_steps (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.postprocessing_steps"]], "preprocesser_dict (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.preprocesser_dict"]], "preprocessing_steps (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.preprocessing_steps"]], "render_dict (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.render_dict"]], "rendering_steps (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.rendering_steps"]], "stage (aisquared.config.graphconfiguration.graphconfiguration property)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.stage"]], "stage (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.stage"]], "to_dict() (aisquared.config.graphconfiguration.graphconfiguration method)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.to_dict"]], "to_dict() (aisquared.config.modelconfiguration.modelconfiguration method)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.to_dict"]], "url (aisquared.config.graphconfiguration.graphconfiguration property)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.url"]], "url (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.url"]], "version (aisquared.config.graphconfiguration.graphconfiguration property)": [[2, "aisquared.config.GraphConfiguration.GraphConfiguration.version"]], "version (aisquared.config.modelconfiguration.modelconfiguration property)": [[2, "aisquared.config.ModelConfiguration.ModelConfiguration.version"]], "deployedanalytic (class in aisquared.config.analytic.deployedanalytic)": [[3, "aisquared.config.analytic.DeployedAnalytic.DeployedAnalytic"]], "deployedmodel (class in aisquared.config.analytic.deployedmodel)": [[3, "aisquared.config.analytic.DeployedModel.DeployedModel"]], "localanalytic (class in aisquared.config.analytic.localanalytic)": [[3, "aisquared.config.analytic.LocalAnalytic.LocalAnalytic"]], "localmodel (class in aisquared.config.analytic.localmodel)": [[3, "aisquared.config.analytic.LocalModel.LocalModel"]], "reversemlworkflow (class in aisquared.config.analytic.reversemlworkflow)": [[3, "aisquared.config.analytic.ReverseMLWorkflow.ReverseMLWorkflow"]], "aisquared.config.analytic": [[3, "module-aisquared.config.analytic"]], "aisquared.config.analytic.deployedanalytic": [[3, "module-aisquared.config.analytic.DeployedAnalytic"]], "aisquared.config.analytic.deployedmodel": [[3, "module-aisquared.config.analytic.DeployedModel"]], "aisquared.config.analytic.localanalytic": [[3, "module-aisquared.config.analytic.LocalAnalytic"]], "aisquared.config.analytic.localmodel": [[3, "module-aisquared.config.analytic.LocalModel"]], "aisquared.config.analytic.reversemlworkflow": [[3, "module-aisquared.config.analytic.ReverseMLWorkflow"]], "all (aisquared.config.analytic.localanalytic.localanalytic property)": [[3, "aisquared.config.analytic.LocalAnalytic.LocalAnalytic.all"]], "bucket (aisquared.config.analytic.reversemlworkflow.reversemlworkflow property)": [[3, "aisquared.config.analytic.ReverseMLWorkflow.ReverseMLWorkflow.bucket"]], "column (aisquared.config.analytic.reversemlworkflow.reversemlworkflow property)": [[3, "aisquared.config.analytic.ReverseMLWorkflow.ReverseMLWorkflow.column"]], "filename (aisquared.config.analytic.reversemlworkflow.reversemlworkflow property)": [[3, "aisquared.config.analytic.ReverseMLWorkflow.ReverseMLWorkflow.filename"]], "header (aisquared.config.analytic.deployedanalytic.deployedanalytic property)": [[3, "aisquared.config.analytic.DeployedAnalytic.DeployedAnalytic.header"]], "header (aisquared.config.analytic.deployedmodel.deployedmodel property)": [[3, "aisquared.config.analytic.DeployedModel.DeployedModel.header"]], "input_type (aisquared.config.analytic.deployedanalytic.deployedanalytic property)": [[3, "aisquared.config.analytic.DeployedAnalytic.DeployedAnalytic.input_type"]], "input_type (aisquared.config.analytic.deployedmodel.deployedmodel property)": [[3, "aisquared.config.analytic.DeployedModel.DeployedModel.input_type"]], "input_type (aisquared.config.analytic.localanalytic.localanalytic property)": [[3, "aisquared.config.analytic.LocalAnalytic.LocalAnalytic.input_type"]], "input_type (aisquared.config.analytic.localmodel.localmodel property)": [[3, "aisquared.config.analytic.LocalModel.LocalModel.input_type"]], "input_type (aisquared.config.analytic.reversemlworkflow.reversemlworkflow property)": [[3, "aisquared.config.analytic.ReverseMLWorkflow.ReverseMLWorkflow.input_type"]], "path (aisquared.config.analytic.localanalytic.localanalytic property)": [[3, "aisquared.config.analytic.LocalAnalytic.LocalAnalytic.path"]], "path (aisquared.config.analytic.localmodel.localmodel property)": [[3, "aisquared.config.analytic.LocalModel.LocalModel.path"]], "period (aisquared.config.analytic.reversemlworkflow.reversemlworkflow property)": [[3, "aisquared.config.analytic.ReverseMLWorkflow.ReverseMLWorkflow.period"]], "secret (aisquared.config.analytic.deployedanalytic.deployedanalytic property)": [[3, "aisquared.config.analytic.DeployedAnalytic.DeployedAnalytic.secret"]], "secret (aisquared.config.analytic.deployedmodel.deployedmodel property)": [[3, "aisquared.config.analytic.DeployedModel.DeployedModel.secret"]], "secret (aisquared.config.analytic.reversemlworkflow.reversemlworkflow property)": [[3, "aisquared.config.analytic.ReverseMLWorkflow.ReverseMLWorkflow.secret"]], "to_dict() (aisquared.config.analytic.deployedanalytic.deployedanalytic method)": [[3, "aisquared.config.analytic.DeployedAnalytic.DeployedAnalytic.to_dict"]], "to_dict() (aisquared.config.analytic.deployedmodel.deployedmodel method)": [[3, "aisquared.config.analytic.DeployedModel.DeployedModel.to_dict"]], "to_dict() (aisquared.config.analytic.localanalytic.localanalytic method)": [[3, "aisquared.config.analytic.LocalAnalytic.LocalAnalytic.to_dict"]], "to_dict() (aisquared.config.analytic.localmodel.localmodel method)": [[3, "aisquared.config.analytic.LocalModel.LocalModel.to_dict"]], "to_dict() (aisquared.config.analytic.reversemlworkflow.reversemlworkflow method)": [[3, "aisquared.config.analytic.ReverseMLWorkflow.ReverseMLWorkflow.to_dict"]], "url (aisquared.config.analytic.deployedanalytic.deployedanalytic property)": [[3, "aisquared.config.analytic.DeployedAnalytic.DeployedAnalytic.url"]], "url (aisquared.config.analytic.deployedmodel.deployedmodel property)": [[3, "aisquared.config.analytic.DeployedModel.DeployedModel.url"]], "binaryfeedback (class in aisquared.config.feedback.binaryfeedback)": [[4, "aisquared.config.feedback.BinaryFeedback.BinaryFeedback"]], "modelfeedback (class in aisquared.config.feedback.modelfeedback)": [[4, "aisquared.config.feedback.ModelFeedback.ModelFeedback"]], "multiclassfeedback (class in aisquared.config.feedback.multiclassfeedback)": [[4, "aisquared.config.feedback.MulticlassFeedback.MulticlassFeedback"]], "qualitativefeedback (class in aisquared.config.feedback.qualitativefeedback)": [[4, "aisquared.config.feedback.QualitativeFeedback.QualitativeFeedback"]], "regressionfeedback (class in aisquared.config.feedback.regressionfeedback)": [[4, "aisquared.config.feedback.RegressionFeedback.RegressionFeedback"]], "simplefeedback (class in aisquared.config.feedback.simplefeedback)": [[4, "aisquared.config.feedback.SimpleFeedback.SimpleFeedback"]], "add_question() (aisquared.config.feedback.modelfeedback.modelfeedback method)": [[4, "aisquared.config.feedback.ModelFeedback.ModelFeedback.add_question"]], "add_question() (aisquared.config.feedback.qualitativefeedback.qualitativefeedback method)": [[4, "aisquared.config.feedback.QualitativeFeedback.QualitativeFeedback.add_question"]], "aisquared.config.feedback": [[4, "module-aisquared.config.feedback"]], "aisquared.config.feedback.binaryfeedback": [[4, "module-aisquared.config.feedback.BinaryFeedback"]], "aisquared.config.feedback.modelfeedback": [[4, "module-aisquared.config.feedback.ModelFeedback"]], "aisquared.config.feedback.multiclassfeedback": [[4, "module-aisquared.config.feedback.MulticlassFeedback"]], "aisquared.config.feedback.qualitativefeedback": [[4, "module-aisquared.config.feedback.QualitativeFeedback"]], "aisquared.config.feedback.regressionfeedback": [[4, "module-aisquared.config.feedback.RegressionFeedback"]], "aisquared.config.feedback.simplefeedback": [[4, "module-aisquared.config.feedback.SimpleFeedback"]], "label_map (aisquared.config.feedback.binaryfeedback.binaryfeedback property)": [[4, "aisquared.config.feedback.BinaryFeedback.BinaryFeedback.label_map"]], "label_map (aisquared.config.feedback.multiclassfeedback.multiclassfeedback property)": [[4, "aisquared.config.feedback.MulticlassFeedback.MulticlassFeedback.label_map"]], "to_dict() (aisquared.config.feedback.binaryfeedback.binaryfeedback method)": [[4, "aisquared.config.feedback.BinaryFeedback.BinaryFeedback.to_dict"]], "to_dict() (aisquared.config.feedback.modelfeedback.modelfeedback method)": [[4, "aisquared.config.feedback.ModelFeedback.ModelFeedback.to_dict"]], "to_dict() (aisquared.config.feedback.multiclassfeedback.multiclassfeedback method)": [[4, "aisquared.config.feedback.MulticlassFeedback.MulticlassFeedback.to_dict"]], "to_dict() (aisquared.config.feedback.qualitativefeedback.qualitativefeedback method)": [[4, "aisquared.config.feedback.QualitativeFeedback.QualitativeFeedback.to_dict"]], "to_dict() (aisquared.config.feedback.regressionfeedback.regressionfeedback method)": [[4, "aisquared.config.feedback.RegressionFeedback.RegressionFeedback.to_dict"]], "to_dict() (aisquared.config.feedback.simplefeedback.simplefeedback method)": [[4, "aisquared.config.feedback.SimpleFeedback.SimpleFeedback.to_dict"]], "imageharvester (class in aisquared.config.harvesting.imageharvester)": [[5, "aisquared.config.harvesting.ImageHarvester.ImageHarvester"]], "inputharvester (class in aisquared.config.harvesting.inputharvester)": [[5, "aisquared.config.harvesting.InputHarvester.InputHarvester"]], "queryparameterharvester (class in aisquared.config.harvesting.queryparameterharvester)": [[5, "aisquared.config.harvesting.QueryParameterHarvester.QueryParameterHarvester"]], "textharvester (class in aisquared.config.harvesting.textharvester)": [[5, "aisquared.config.harvesting.TextHarvester.TextHarvester"]], "aisquared.config.harvesting": [[5, "module-aisquared.config.harvesting"]], "aisquared.config.harvesting.imageharvester": [[5, "module-aisquared.config.harvesting.ImageHarvester"]], "aisquared.config.harvesting.inputharvester": [[5, "module-aisquared.config.harvesting.InputHarvester"]], "aisquared.config.harvesting.queryparameterharvester": [[5, "module-aisquared.config.harvesting.QueryParameterHarvester"]], "aisquared.config.harvesting.textharvester": [[5, "module-aisquared.config.harvesting.TextHarvester"]], "attributes (aisquared.config.harvesting.queryparameterharvester.queryparameterharvester property)": [[5, "aisquared.config.harvesting.QueryParameterHarvester.QueryParameterHarvester.attributes"]], "body_only (aisquared.config.harvesting.textharvester.textharvester property)": [[5, "aisquared.config.harvesting.TextHarvester.TextHarvester.body_only"]], "features (aisquared.config.harvesting.inputharvester.inputharvester property)": [[5, "aisquared.config.harvesting.InputHarvester.InputHarvester.features"]], "flags (aisquared.config.harvesting.textharvester.textharvester property)": [[5, "aisquared.config.harvesting.TextHarvester.TextHarvester.flags"]], "how (aisquared.config.harvesting.imageharvester.imageharvester property)": [[5, "aisquared.config.harvesting.ImageHarvester.ImageHarvester.how"]], "how (aisquared.config.harvesting.textharvester.textharvester property)": [[5, "aisquared.config.harvesting.TextHarvester.TextHarvester.how"]], "input_type (aisquared.config.harvesting.inputharvester.inputharvester property)": [[5, "aisquared.config.harvesting.InputHarvester.InputHarvester.input_type"]], "limit (aisquared.config.harvesting.textharvester.textharvester property)": [[5, "aisquared.config.harvesting.TextHarvester.TextHarvester.limit"]], "max_length (aisquared.config.harvesting.inputharvester.inputharvester property)": [[5, "aisquared.config.harvesting.InputHarvester.InputHarvester.max_length"]], "query_keys (aisquared.config.harvesting.queryparameterharvester.queryparameterharvester property)": [[5, "aisquared.config.harvesting.QueryParameterHarvester.QueryParameterHarvester.query_keys"]], "regex (aisquared.config.harvesting.textharvester.textharvester property)": [[5, "aisquared.config.harvesting.TextHarvester.TextHarvester.regex"]], "to_dict() (aisquared.config.harvesting.imageharvester.imageharvester method)": [[5, "aisquared.config.harvesting.ImageHarvester.ImageHarvester.to_dict"]], "to_dict() (aisquared.config.harvesting.inputharvester.inputharvester method)": [[5, "aisquared.config.harvesting.InputHarvester.InputHarvester.to_dict"]], "to_dict() (aisquared.config.harvesting.queryparameterharvester.queryparameterharvester method)": [[5, "aisquared.config.harvesting.QueryParameterHarvester.QueryParameterHarvester.to_dict"]], "to_dict() (aisquared.config.harvesting.textharvester.textharvester method)": [[5, "aisquared.config.harvesting.TextHarvester.TextHarvester.to_dict"]], "url_locations (aisquared.config.harvesting.queryparameterharvester.queryparameterharvester property)": [[5, "aisquared.config.harvesting.QueryParameterHarvester.QueryParameterHarvester.url_locations"]], "binaryclassification (class in aisquared.config.postprocessing.binaryclassification)": [[6, "aisquared.config.postprocessing.BinaryClassification.BinaryClassification"]], "multiclassclassification (class in aisquared.config.postprocessing.multiclassclassification)": [[6, "aisquared.config.postprocessing.MulticlassClassification.MulticlassClassification"]], "objectdetection (class in aisquared.config.postprocessing.objectdetection)": [[6, "aisquared.config.postprocessing.ObjectDetection.ObjectDetection"]], "regression (class in aisquared.config.postprocessing.regression)": [[6, "aisquared.config.postprocessing.Regression.Regression"]], "aisquared.config.postprocessing": [[6, "module-aisquared.config.postprocessing"]], "aisquared.config.postprocessing.binaryclassification": [[6, "module-aisquared.config.postprocessing.BinaryClassification"]], "aisquared.config.postprocessing.multiclassclassification": [[6, "module-aisquared.config.postprocessing.MulticlassClassification"]], "aisquared.config.postprocessing.objectdetection": [[6, "module-aisquared.config.postprocessing.ObjectDetection"]], "aisquared.config.postprocessing.regression": [[6, "module-aisquared.config.postprocessing.Regression"]], "label_map (aisquared.config.postprocessing.binaryclassification.binaryclassification property)": [[6, "aisquared.config.postprocessing.BinaryClassification.BinaryClassification.label_map"]], "label_map (aisquared.config.postprocessing.multiclassclassification.multiclassclassification property)": [[6, "aisquared.config.postprocessing.MulticlassClassification.MulticlassClassification.label_map"]], "label_map (aisquared.config.postprocessing.objectdetection.objectdetection property)": [[6, "aisquared.config.postprocessing.ObjectDetection.ObjectDetection.label_map"]], "max (aisquared.config.postprocessing.regression.regression property)": [[6, "aisquared.config.postprocessing.Regression.Regression.max"]], "min (aisquared.config.postprocessing.regression.regression property)": [[6, "aisquared.config.postprocessing.Regression.Regression.min"]], "round (aisquared.config.postprocessing.regression.regression property)": [[6, "aisquared.config.postprocessing.Regression.Regression.round"]], "threshold (aisquared.config.postprocessing.binaryclassification.binaryclassification property)": [[6, "aisquared.config.postprocessing.BinaryClassification.BinaryClassification.threshold"]], "threshold (aisquared.config.postprocessing.objectdetection.objectdetection property)": [[6, "aisquared.config.postprocessing.ObjectDetection.ObjectDetection.threshold"]], "to_dict() (aisquared.config.postprocessing.binaryclassification.binaryclassification method)": [[6, "aisquared.config.postprocessing.BinaryClassification.BinaryClassification.to_dict"]], "to_dict() (aisquared.config.postprocessing.multiclassclassification.multiclassclassification method)": [[6, "aisquared.config.postprocessing.MulticlassClassification.MulticlassClassification.to_dict"]], "to_dict() (aisquared.config.postprocessing.objectdetection.objectdetection method)": [[6, "aisquared.config.postprocessing.ObjectDetection.ObjectDetection.to_dict"]], "to_dict() (aisquared.config.postprocessing.regression.regression method)": [[6, "aisquared.config.postprocessing.Regression.Regression.to_dict"]], "aisquared.config.preprocessing": [[7, "module-aisquared.config.preprocessing"]], "addvalue (class in aisquared.config.preprocessing.image.steps)": [[8, "aisquared.config.preprocessing.image.Steps.AddValue"]], "converttocolor (class in aisquared.config.preprocessing.image.steps)": [[8, "aisquared.config.preprocessing.image.Steps.ConvertToColor"]], "dividevalue (class in aisquared.config.preprocessing.image.steps)": [[8, "aisquared.config.preprocessing.image.Steps.DivideValue"]], "imagepreprocessor (class in aisquared.config.preprocessing.image.imagepreprocessing)": [[8, "aisquared.config.preprocessing.image.ImagePreprocessing.ImagePreprocessor"]], "multiplyvalue (class in aisquared.config.preprocessing.image.steps)": [[8, "aisquared.config.preprocessing.image.Steps.MultiplyValue"]], "resize (class in aisquared.config.preprocessing.image.steps)": [[8, "aisquared.config.preprocessing.image.Steps.Resize"]], "subtractvalue (class in aisquared.config.preprocessing.image.steps)": [[8, "aisquared.config.preprocessing.image.Steps.SubtractValue"]], "add_step() (aisquared.config.preprocessing.image.imagepreprocessing.imagepreprocessor method)": [[8, "aisquared.config.preprocessing.image.ImagePreprocessing.ImagePreprocessor.add_step"]], "aisquared.config.preprocessing.image": [[8, "module-aisquared.config.preprocessing.image"]], "aisquared.config.preprocessing.image.imagepreprocessing": [[8, "module-aisquared.config.preprocessing.image.ImagePreprocessing"]], "aisquared.config.preprocessing.image.steps": [[8, "module-aisquared.config.preprocessing.image.Steps"]], "color (aisquared.config.preprocessing.image.steps.converttocolor property)": [[8, "aisquared.config.preprocessing.image.Steps.ConvertToColor.color"]], "method (aisquared.config.preprocessing.image.steps.resize property)": [[8, "aisquared.config.preprocessing.image.Steps.Resize.method"]], "preserve_aspect_ratio (aisquared.config.preprocessing.image.steps.resize property)": [[8, "aisquared.config.preprocessing.image.Steps.Resize.preserve_aspect_ratio"]], "size (aisquared.config.preprocessing.image.steps.resize property)": [[8, "aisquared.config.preprocessing.image.Steps.Resize.size"]], "step_dict (aisquared.config.preprocessing.image.imagepreprocessing.imagepreprocessor property)": [[8, "aisquared.config.preprocessing.image.ImagePreprocessing.ImagePreprocessor.step_dict"]], "to_dict() (aisquared.config.preprocessing.image.imagepreprocessing.imagepreprocessor method)": [[8, "aisquared.config.preprocessing.image.ImagePreprocessing.ImagePreprocessor.to_dict"]], "to_dict() (aisquared.config.preprocessing.image.steps.addvalue method)": [[8, "aisquared.config.preprocessing.image.Steps.AddValue.to_dict"]], "to_dict() (aisquared.config.preprocessing.image.steps.converttocolor method)": [[8, "aisquared.config.preprocessing.image.Steps.ConvertToColor.to_dict"]], "to_dict() (aisquared.config.preprocessing.image.steps.dividevalue method)": [[8, "aisquared.config.preprocessing.image.Steps.DivideValue.to_dict"]], "to_dict() (aisquared.config.preprocessing.image.steps.multiplyvalue method)": [[8, "aisquared.config.preprocessing.image.Steps.MultiplyValue.to_dict"]], "to_dict() (aisquared.config.preprocessing.image.steps.resize method)": [[8, "aisquared.config.preprocessing.image.Steps.Resize.to_dict"]], "to_dict() (aisquared.config.preprocessing.image.steps.subtractvalue method)": [[8, "aisquared.config.preprocessing.image.Steps.SubtractValue.to_dict"]], "value (aisquared.config.preprocessing.image.steps.addvalue property)": [[8, "aisquared.config.preprocessing.image.Steps.AddValue.value"]], "value (aisquared.config.preprocessing.image.steps.dividevalue property)": [[8, "aisquared.config.preprocessing.image.Steps.DivideValue.value"]], "value (aisquared.config.preprocessing.image.steps.multiplyvalue property)": [[8, "aisquared.config.preprocessing.image.Steps.MultiplyValue.value"]], "value (aisquared.config.preprocessing.image.steps.subtractvalue property)": [[8, "aisquared.config.preprocessing.image.Steps.SubtractValue.value"]], "dropcolumn (class in aisquared.config.preprocessing.tabular.steps)": [[9, "aisquared.config.preprocessing.tabular.Steps.DropColumn"]], "minmax (class in aisquared.config.preprocessing.tabular.steps)": [[9, "aisquared.config.preprocessing.tabular.Steps.MinMax"]], "onehot (class in aisquared.config.preprocessing.tabular.steps)": [[9, "aisquared.config.preprocessing.tabular.Steps.OneHot"]], "tabularpreprocessor (class in aisquared.config.preprocessing.tabular.tabularpreprocessing)": [[9, "aisquared.config.preprocessing.tabular.TabularPreprocessing.TabularPreprocessor"]], "zscore (class in aisquared.config.preprocessing.tabular.steps)": [[9, "aisquared.config.preprocessing.tabular.Steps.ZScore"]], "add_step() (aisquared.config.preprocessing.tabular.tabularpreprocessing.tabularpreprocessor method)": [[9, "aisquared.config.preprocessing.tabular.TabularPreprocessing.TabularPreprocessor.add_step"]], "aisquared.config.preprocessing.tabular": [[9, "module-aisquared.config.preprocessing.tabular"]], "aisquared.config.preprocessing.tabular.steps": [[9, "module-aisquared.config.preprocessing.tabular.Steps"]], "aisquared.config.preprocessing.tabular.tabularpreprocessing": [[9, "module-aisquared.config.preprocessing.tabular.TabularPreprocessing"]], "column (aisquared.config.preprocessing.tabular.steps.dropcolumn property)": [[9, "aisquared.config.preprocessing.tabular.Steps.DropColumn.column"]], "column (aisquared.config.preprocessing.tabular.steps.onehot property)": [[9, "aisquared.config.preprocessing.tabular.Steps.OneHot.column"]], "columns (aisquared.config.preprocessing.tabular.steps.minmax property)": [[9, "aisquared.config.preprocessing.tabular.Steps.MinMax.columns"]], "columns (aisquared.config.preprocessing.tabular.steps.zscore property)": [[9, "aisquared.config.preprocessing.tabular.Steps.ZScore.columns"]], "maxs (aisquared.config.preprocessing.tabular.steps.minmax property)": [[9, "aisquared.config.preprocessing.tabular.Steps.MinMax.maxs"]], "means (aisquared.config.preprocessing.tabular.steps.zscore property)": [[9, "aisquared.config.preprocessing.tabular.Steps.ZScore.means"]], "mins (aisquared.config.preprocessing.tabular.steps.minmax property)": [[9, "aisquared.config.preprocessing.tabular.Steps.MinMax.mins"]], "stds (aisquared.config.preprocessing.tabular.steps.zscore property)": [[9, "aisquared.config.preprocessing.tabular.Steps.ZScore.stds"]], "to_dict() (aisquared.config.preprocessing.tabular.steps.dropcolumn method)": [[9, "aisquared.config.preprocessing.tabular.Steps.DropColumn.to_dict"]], "to_dict() (aisquared.config.preprocessing.tabular.steps.minmax method)": [[9, "aisquared.config.preprocessing.tabular.Steps.MinMax.to_dict"]], "to_dict() (aisquared.config.preprocessing.tabular.steps.onehot method)": [[9, "aisquared.config.preprocessing.tabular.Steps.OneHot.to_dict"]], "to_dict() (aisquared.config.preprocessing.tabular.steps.zscore method)": [[9, "aisquared.config.preprocessing.tabular.Steps.ZScore.to_dict"]], "to_dict() (aisquared.config.preprocessing.tabular.tabularpreprocessing.tabularpreprocessor method)": [[9, "aisquared.config.preprocessing.tabular.TabularPreprocessing.TabularPreprocessor.to_dict"]], "values (aisquared.config.preprocessing.tabular.steps.onehot property)": [[9, "aisquared.config.preprocessing.tabular.Steps.OneHot.values"]], "converttocase (class in aisquared.config.preprocessing.text.steps)": [[10, "aisquared.config.preprocessing.text.Steps.ConvertToCase"]], "converttovocabulary (class in aisquared.config.preprocessing.text.steps)": [[10, "aisquared.config.preprocessing.text.Steps.ConvertToVocabulary"]], "padsequences (class in aisquared.config.preprocessing.text.steps)": [[10, "aisquared.config.preprocessing.text.Steps.PadSequences"]], "removecharacters (class in aisquared.config.preprocessing.text.steps)": [[10, "aisquared.config.preprocessing.text.Steps.RemoveCharacters"]], "textpreprocessor (class in aisquared.config.preprocessing.text.textpreprocessing)": [[10, "aisquared.config.preprocessing.text.TextPreprocessing.TextPreprocessor"]], "tokenize (class in aisquared.config.preprocessing.text.steps)": [[10, "aisquared.config.preprocessing.text.Steps.Tokenize"]], "trim (class in aisquared.config.preprocessing.text.steps)": [[10, "aisquared.config.preprocessing.text.Steps.Trim"]], "add_step() (aisquared.config.preprocessing.text.textpreprocessing.textpreprocessor method)": [[10, "aisquared.config.preprocessing.text.TextPreprocessing.TextPreprocessor.add_step"]], "aisquared.config.preprocessing.text": [[10, "module-aisquared.config.preprocessing.text"]], "aisquared.config.preprocessing.text.steps": [[10, "module-aisquared.config.preprocessing.text.Steps"]], "aisquared.config.preprocessing.text.textpreprocessing": [[10, "module-aisquared.config.preprocessing.text.TextPreprocessing"]], "length (aisquared.config.preprocessing.text.steps.padsequences property)": [[10, "aisquared.config.preprocessing.text.Steps.PadSequences.length"]], "lowercase (aisquared.config.preprocessing.text.steps.converttocase property)": [[10, "aisquared.config.preprocessing.text.Steps.ConvertToCase.lowercase"]], "max_vocab (aisquared.config.preprocessing.text.steps.converttovocabulary property)": [[10, "aisquared.config.preprocessing.text.Steps.ConvertToVocabulary.max_vocab"]], "oov_character (aisquared.config.preprocessing.text.steps.converttovocabulary property)": [[10, "aisquared.config.preprocessing.text.Steps.ConvertToVocabulary.oov_character"]], "pad_character (aisquared.config.preprocessing.text.steps.padsequences property)": [[10, "aisquared.config.preprocessing.text.Steps.PadSequences.pad_character"]], "pad_location (aisquared.config.preprocessing.text.steps.padsequences property)": [[10, "aisquared.config.preprocessing.text.Steps.PadSequences.pad_location"]], "remove_digits (aisquared.config.preprocessing.text.steps.removecharacters property)": [[10, "aisquared.config.preprocessing.text.Steps.RemoveCharacters.remove_digits"]], "remove_punctuation (aisquared.config.preprocessing.text.steps.removecharacters property)": [[10, "aisquared.config.preprocessing.text.Steps.RemoveCharacters.remove_punctuation"]], "split_sentences (aisquared.config.preprocessing.text.steps.tokenize property)": [[10, "aisquared.config.preprocessing.text.Steps.Tokenize.split_sentences"]], "split_words (aisquared.config.preprocessing.text.steps.tokenize property)": [[10, "aisquared.config.preprocessing.text.Steps.Tokenize.split_words"]], "start_character (aisquared.config.preprocessing.text.steps.converttovocabulary property)": [[10, "aisquared.config.preprocessing.text.Steps.ConvertToVocabulary.start_character"]], "step_dict (aisquared.config.preprocessing.text.textpreprocessing.textpreprocessor property)": [[10, "aisquared.config.preprocessing.text.TextPreprocessing.TextPreprocessor.step_dict"]], "to_dict() (aisquared.config.preprocessing.text.steps.converttocase method)": [[10, "aisquared.config.preprocessing.text.Steps.ConvertToCase.to_dict"]], "to_dict() (aisquared.config.preprocessing.text.steps.converttovocabulary method)": [[10, "aisquared.config.preprocessing.text.Steps.ConvertToVocabulary.to_dict"]], "to_dict() (aisquared.config.preprocessing.text.steps.padsequences method)": [[10, "aisquared.config.preprocessing.text.Steps.PadSequences.to_dict"]], "to_dict() (aisquared.config.preprocessing.text.steps.removecharacters method)": [[10, "aisquared.config.preprocessing.text.Steps.RemoveCharacters.to_dict"]], "to_dict() (aisquared.config.preprocessing.text.steps.tokenize method)": [[10, "aisquared.config.preprocessing.text.Steps.Tokenize.to_dict"]], "to_dict() (aisquared.config.preprocessing.text.steps.trim method)": [[10, "aisquared.config.preprocessing.text.Steps.Trim.to_dict"]], "to_dict() (aisquared.config.preprocessing.text.textpreprocessing.textpreprocessor method)": [[10, "aisquared.config.preprocessing.text.TextPreprocessing.TextPreprocessor.to_dict"]], "token_pattern (aisquared.config.preprocessing.text.steps.tokenize property)": [[10, "aisquared.config.preprocessing.text.Steps.Tokenize.token_pattern"]], "truncate_location (aisquared.config.preprocessing.text.steps.padsequences property)": [[10, "aisquared.config.preprocessing.text.Steps.PadSequences.truncate_location"]], "vocabulary (aisquared.config.preprocessing.text.steps.converttovocabulary property)": [[10, "aisquared.config.preprocessing.text.Steps.ConvertToVocabulary.vocabulary"]], "barchartrendering (class in aisquared.config.rendering.barchartrendering)": [[11, "aisquared.config.rendering.BarChartRendering.BarChartRendering"]], "containerrendering (class in aisquared.config.rendering.containerrendering)": [[11, "aisquared.config.rendering.ContainerRendering.ContainerRendering"]], "dashboardreplacementrendering (class in aisquared.config.rendering.dashboardreplacementrendering)": [[11, "aisquared.config.rendering.DashboardReplacementRendering.DashboardReplacementRendering"]], "documentrendering (class in aisquared.config.rendering.documentrendering)": [[11, "aisquared.config.rendering.DocumentRendering.DocumentRendering"]], "doughnutchartrendering (class in aisquared.config.rendering.doughnutchartrendering)": [[11, "aisquared.config.rendering.DoughnutChartRendering.DoughnutChartRendering"]], "filterrendering (class in aisquared.config.rendering.filterrendering)": [[11, "aisquared.config.rendering.FilterRendering.FilterRendering"]], "htmltagrendering (class in aisquared.config.rendering.htmltagrendering)": [[11, "aisquared.config.rendering.HTMLTagRendering.HTMLTagRendering"]], "imagerendering (class in aisquared.config.rendering.imagerendering)": [[11, "aisquared.config.rendering.ImageRendering.ImageRendering"]], "linechartrendering (class in aisquared.config.rendering.linechartrendering)": [[11, "aisquared.config.rendering.LineChartRendering.LineChartRendering"]], "objectrendering (class in aisquared.config.rendering.objectrendering)": [[11, "aisquared.config.rendering.ObjectRendering.ObjectRendering"]], "piechartrendering (class in aisquared.config.rendering.piechartrendering)": [[11, "aisquared.config.rendering.PieChartRendering.PieChartRendering"]], "sosrendering (class in aisquared.config.rendering.sosrendering)": [[11, "aisquared.config.rendering.SOSRendering.SOSRendering"]], "tablerendering (class in aisquared.config.rendering.tablerendering)": [[11, "aisquared.config.rendering.TableRendering.TableRendering"]], "wordrendering (class in aisquared.config.rendering.wordrendering)": [[11, "aisquared.config.rendering.WordRendering.WordRendering"]], "aisquared.config.rendering": [[11, "module-aisquared.config.rendering"]], "aisquared.config.rendering.barchartrendering": [[11, "module-aisquared.config.rendering.BarChartRendering"]], "aisquared.config.rendering.containerrendering": [[11, "module-aisquared.config.rendering.ContainerRendering"]], "aisquared.config.rendering.dashboardreplacementrendering": [[11, "module-aisquared.config.rendering.DashboardReplacementRendering"]], "aisquared.config.rendering.documentrendering": [[11, "module-aisquared.config.rendering.DocumentRendering"]], "aisquared.config.rendering.doughnutchartrendering": [[11, "module-aisquared.config.rendering.DoughnutChartRendering"]], "aisquared.config.rendering.filterrendering": [[11, "module-aisquared.config.rendering.FilterRendering"]], "aisquared.config.rendering.htmltagrendering": [[11, "module-aisquared.config.rendering.HTMLTagRendering"]], "aisquared.config.rendering.imagerendering": [[11, "module-aisquared.config.rendering.ImageRendering"]], "aisquared.config.rendering.linechartrendering": [[11, "module-aisquared.config.rendering.LineChartRendering"]], "aisquared.config.rendering.objectrendering": [[11, "module-aisquared.config.rendering.ObjectRendering"]], "aisquared.config.rendering.piechartrendering": [[11, "module-aisquared.config.rendering.PieChartRendering"]], "aisquared.config.rendering.sosrendering": [[11, "module-aisquared.config.rendering.SOSRendering"]], "aisquared.config.rendering.tablerendering": [[11, "module-aisquared.config.rendering.TableRendering"]], "aisquared.config.rendering.wordrendering": [[11, "module-aisquared.config.rendering.WordRendering"]], "anchor_selector (aisquared.config.rendering.dashboardreplacementrendering.dashboardreplacementrendering property)": [[11, "aisquared.config.rendering.DashboardReplacementRendering.DashboardReplacementRendering.anchor_selector"]], "badge_color (aisquared.config.rendering.imagerendering.imagerendering property)": [[11, "aisquared.config.rendering.ImageRendering.ImageRendering.badge_color"]], "badge_color (aisquared.config.rendering.objectrendering.objectrendering property)": [[11, "aisquared.config.rendering.ObjectRendering.ObjectRendering.badge_color"]], "badge_color (aisquared.config.rendering.wordrendering.wordrendering property)": [[11, "aisquared.config.rendering.WordRendering.WordRendering.badge_color"]], "badge_shape (aisquared.config.rendering.wordrendering.wordrendering property)": [[11, "aisquared.config.rendering.WordRendering.WordRendering.badge_shape"]], "can_toggle (aisquared.config.rendering.sosrendering.sosrendering property)": [[11, "aisquared.config.rendering.SOSRendering.SOSRendering.can_toggle"]], "classes (aisquared.config.rendering.documentrendering.documentrendering property)": [[11, "aisquared.config.rendering.DocumentRendering.DocumentRendering.classes"]], "classes (aisquared.config.rendering.imagerendering.imagerendering property)": [[11, "aisquared.config.rendering.ImageRendering.ImageRendering.classes"]], "classes (aisquared.config.rendering.wordrendering.wordrendering property)": [[11, "aisquared.config.rendering.WordRendering.WordRendering.classes"]], "color (aisquared.config.rendering.imagerendering.imagerendering property)": [[11, "aisquared.config.rendering.ImageRendering.ImageRendering.color"]], "color (aisquared.config.rendering.objectrendering.objectrendering property)": [[11, "aisquared.config.rendering.ObjectRendering.ObjectRendering.color"]], "content_key (aisquared.config.rendering.wordrendering.wordrendering property)": [[11, "aisquared.config.rendering.WordRendering.WordRendering.content_key"]], "display (aisquared.config.rendering.containerrendering.containerrendering property)": [[11, "aisquared.config.rendering.ContainerRendering.ContainerRendering.display"]], "documents (aisquared.config.rendering.documentrendering.documentrendering property)": [[11, "aisquared.config.rendering.DocumentRendering.DocumentRendering.documents"]], "font_color (aisquared.config.rendering.imagerendering.imagerendering property)": [[11, "aisquared.config.rendering.ImageRendering.ImageRendering.font_color"]], "font_color (aisquared.config.rendering.objectrendering.objectrendering property)": [[11, "aisquared.config.rendering.ObjectRendering.ObjectRendering.font_color"]], "font_size (aisquared.config.rendering.imagerendering.imagerendering property)": [[11, "aisquared.config.rendering.ImageRendering.ImageRendering.font_size"]], "font_size (aisquared.config.rendering.objectrendering.objectrendering property)": [[11, "aisquared.config.rendering.ObjectRendering.ObjectRendering.font_size"]], "height (aisquared.config.rendering.containerrendering.containerrendering property)": [[11, "aisquared.config.rendering.ContainerRendering.ContainerRendering.height"]], "id (aisquared.config.rendering.containerrendering.containerrendering property)": [[11, "aisquared.config.rendering.ContainerRendering.ContainerRendering.id"]], "include_probability (aisquared.config.rendering.documentrendering.documentrendering property)": [[11, "aisquared.config.rendering.DocumentRendering.DocumentRendering.include_probability"]], "include_probability (aisquared.config.rendering.imagerendering.imagerendering property)": [[11, "aisquared.config.rendering.ImageRendering.ImageRendering.include_probability"]], "include_probability (aisquared.config.rendering.objectrendering.objectrendering property)": [[11, "aisquared.config.rendering.ObjectRendering.ObjectRendering.include_probability"]], "key (aisquared.config.rendering.filterrendering.filterrendering property)": [[11, "aisquared.config.rendering.FilterRendering.FilterRendering.key"]], "label (aisquared.config.rendering.containerrendering.containerrendering property)": [[11, "aisquared.config.rendering.ContainerRendering.ContainerRendering.label"]], "label (aisquared.config.rendering.dashboardreplacementrendering.dashboardreplacementrendering property)": [[11, "aisquared.config.rendering.DashboardReplacementRendering.DashboardReplacementRendering.label"]], "label (aisquared.config.rendering.sosrendering.sosrendering property)": [[11, "aisquared.config.rendering.SOSRendering.SOSRendering.label"]], "orientation (aisquared.config.rendering.containerrendering.containerrendering property)": [[11, "aisquared.config.rendering.ContainerRendering.ContainerRendering.orientation"]], "placement (aisquared.config.rendering.imagerendering.imagerendering property)": [[11, "aisquared.config.rendering.ImageRendering.ImageRendering.placement"]], "placement (aisquared.config.rendering.objectrendering.objectrendering property)": [[11, "aisquared.config.rendering.ObjectRendering.ObjectRendering.placement"]], "position (aisquared.config.rendering.containerrendering.containerrendering property)": [[11, "aisquared.config.rendering.ContainerRendering.ContainerRendering.position"]], "prediction_key (aisquared.config.rendering.documentrendering.documentrendering property)": [[11, "aisquared.config.rendering.DocumentRendering.DocumentRendering.prediction_key"]], "probability_key (aisquared.config.rendering.documentrendering.documentrendering property)": [[11, "aisquared.config.rendering.DocumentRendering.DocumentRendering.probability_key"]], "qualifier (aisquared.config.rendering.filterrendering.filterrendering property)": [[11, "aisquared.config.rendering.FilterRendering.FilterRendering.qualifier"]], "query_selector (aisquared.config.rendering.containerrendering.containerrendering property)": [[11, "aisquared.config.rendering.ContainerRendering.ContainerRendering.query_selector"]], "result_key (aisquared.config.rendering.wordrendering.wordrendering property)": [[11, "aisquared.config.rendering.WordRendering.WordRendering.result_key"]], "source (aisquared.config.rendering.filterrendering.filterrendering property)": [[11, "aisquared.config.rendering.FilterRendering.FilterRendering.source"]], "thickness (aisquared.config.rendering.imagerendering.imagerendering property)": [[11, "aisquared.config.rendering.ImageRendering.ImageRendering.thickness"]], "thickness (aisquared.config.rendering.objectrendering.objectrendering property)": [[11, "aisquared.config.rendering.ObjectRendering.ObjectRendering.thickness"]], "threshold_key (aisquared.config.rendering.documentrendering.documentrendering property)": [[11, "aisquared.config.rendering.DocumentRendering.DocumentRendering.threshold_key"]], "threshold_key (aisquared.config.rendering.imagerendering.imagerendering property)": [[11, "aisquared.config.rendering.ImageRendering.ImageRendering.threshold_key"]], "threshold_key (aisquared.config.rendering.wordrendering.wordrendering property)": [[11, "aisquared.config.rendering.WordRendering.WordRendering.threshold_key"]], "threshold_value (aisquared.config.rendering.documentrendering.documentrendering property)": [[11, "aisquared.config.rendering.DocumentRendering.DocumentRendering.threshold_value"]], "threshold_value (aisquared.config.rendering.imagerendering.imagerendering property)": [[11, "aisquared.config.rendering.ImageRendering.ImageRendering.threshold_value"]], "threshold_value (aisquared.config.rendering.wordrendering.wordrendering property)": [[11, "aisquared.config.rendering.WordRendering.WordRendering.threshold_value"]], "to_dict() (aisquared.config.rendering.barchartrendering.barchartrendering method)": [[11, "aisquared.config.rendering.BarChartRendering.BarChartRendering.to_dict"]], "to_dict() (aisquared.config.rendering.containerrendering.containerrendering method)": [[11, "aisquared.config.rendering.ContainerRendering.ContainerRendering.to_dict"]], "to_dict() (aisquared.config.rendering.dashboardreplacementrendering.dashboardreplacementrendering method)": [[11, "aisquared.config.rendering.DashboardReplacementRendering.DashboardReplacementRendering.to_dict"]], "to_dict() (aisquared.config.rendering.documentrendering.documentrendering method)": [[11, "aisquared.config.rendering.DocumentRendering.DocumentRendering.to_dict"]], "to_dict() (aisquared.config.rendering.doughnutchartrendering.doughnutchartrendering method)": [[11, "aisquared.config.rendering.DoughnutChartRendering.DoughnutChartRendering.to_dict"]], "to_dict() (aisquared.config.rendering.filterrendering.filterrendering method)": [[11, "aisquared.config.rendering.FilterRendering.FilterRendering.to_dict"]], "to_dict() (aisquared.config.rendering.htmltagrendering.htmltagrendering method)": [[11, "aisquared.config.rendering.HTMLTagRendering.HTMLTagRendering.to_dict"]], "to_dict() (aisquared.config.rendering.imagerendering.imagerendering method)": [[11, "aisquared.config.rendering.ImageRendering.ImageRendering.to_dict"]], "to_dict() (aisquared.config.rendering.linechartrendering.linechartrendering method)": [[11, "aisquared.config.rendering.LineChartRendering.LineChartRendering.to_dict"]], "to_dict() (aisquared.config.rendering.objectrendering.objectrendering method)": [[11, "aisquared.config.rendering.ObjectRendering.ObjectRendering.to_dict"]], "to_dict() (aisquared.config.rendering.piechartrendering.piechartrendering method)": [[11, "aisquared.config.rendering.PieChartRendering.PieChartRendering.to_dict"]], "to_dict() (aisquared.config.rendering.sosrendering.sosrendering method)": [[11, "aisquared.config.rendering.SOSRendering.SOSRendering.to_dict"]], "to_dict() (aisquared.config.rendering.tablerendering.tablerendering method)": [[11, "aisquared.config.rendering.TableRendering.TableRendering.to_dict"]], "to_dict() (aisquared.config.rendering.wordrendering.wordrendering method)": [[11, "aisquared.config.rendering.WordRendering.WordRendering.to_dict"]], "underline_color (aisquared.config.rendering.documentrendering.documentrendering property)": [[11, "aisquared.config.rendering.DocumentRendering.DocumentRendering.underline_color"]], "value (aisquared.config.rendering.filterrendering.filterrendering property)": [[11, "aisquared.config.rendering.FilterRendering.FilterRendering.value"]], "where_replace (aisquared.config.rendering.dashboardreplacementrendering.dashboardreplacementrendering property)": [[11, "aisquared.config.rendering.DashboardReplacementRendering.DashboardReplacementRendering.where_replace"]], "width (aisquared.config.rendering.containerrendering.containerrendering property)": [[11, "aisquared.config.rendering.ContainerRendering.ContainerRendering.width"]], "word_list (aisquared.config.rendering.wordrendering.wordrendering property)": [[11, "aisquared.config.rendering.WordRendering.WordRendering.word_list"]], "words (aisquared.config.rendering.documentrendering.documentrendering property)": [[11, "aisquared.config.rendering.DocumentRendering.DocumentRendering.words"]], "xoffset (aisquared.config.rendering.containerrendering.containerrendering property)": [[11, "aisquared.config.rendering.ContainerRendering.ContainerRendering.xOffset"]], "yoffset (aisquared.config.rendering.containerrendering.containerrendering property)": [[11, "aisquared.config.rendering.ContainerRendering.ContainerRendering.yOffset"]], "aisquared.logging": [[12, "module-aisquared.logging"]], "aisquaredapiexception": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredAPIException"]], "aisquaredplatformclient (class in aisquared.platform.aisquaredplatformclient)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient"]], "add_users_to_group() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.add_users_to_group"]], "aisquared.platform": [[13, "module-aisquared.platform"]], "aisquared.platform.aisquaredplatformclient": [[13, "module-aisquared.platform.AISquaredPlatformClient"]], "base_url (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient property)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.base_url"]], "create_group() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.create_group"]], "create_user() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.create_user"]], "delete_group() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.delete_group"]], "delete_model() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.delete_model"]], "delete_user() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.delete_user"]], "get_group() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.get_group"]], "get_group_id_by_name() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.get_group_id_by_name"]], "get_model() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.get_model"]], "get_model_id_by_name() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.get_model_id_by_name"]], "get_model_usage_metrics() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.get_model_usage_metrics"]], "get_user() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.get_user"]], "get_user_id_by_name() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.get_user_id_by_name"]], "get_user_usage_metrics() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.get_user_usage_metrics"]], "headers (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient property)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.headers"]], "list_group_users() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.list_group_users"]], "list_groups() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.list_groups"]], "list_model_feedback() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.list_model_feedback"]], "list_model_prediction_feedback() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.list_model_prediction_feedback"]], "list_model_predictions() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.list_model_predictions"]], "list_model_users() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.list_model_users"]], "list_models() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.list_models"]], "list_prediction_feedback() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.list_prediction_feedback"]], "list_users() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.list_users"]], "login() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.login"]], "password (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient property)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.password"]], "remove_users_from_group() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.remove_users_from_group"]], "share_model_with_group() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.share_model_with_group"]], "share_model_with_user() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.share_model_with_user"]], "test_connection() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.test_connection"]], "token (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient property)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.token"]], "unshare_model_with_group() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.unshare_model_with_group"]], "unshare_model_with_user() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.unshare_model_with_user"]], "update_group() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.update_group"]], "update_user() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.update_user"]], "upload_model() (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient method)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.upload_model"]], "username (aisquared.platform.aisquaredplatformclient.aisquaredplatformclient property)": [[13, "aisquared.platform.AISquaredPlatformClient.AISquaredPlatformClient.username"]], "aisquared.serving": [[14, "module-aisquared.serving"]], "aisquared.serving.deploy_model": [[14, "module-aisquared.serving.deploy_model"]], "aisquared.serving.get_remote_prediction": [[14, "module-aisquared.serving.get_remote_prediction"]], "deploy_model() (in module aisquared.serving.deploy_model)": [[14, "aisquared.serving.deploy_model.deploy_model"]], "get_remote_prediction() (in module aisquared.serving.get_remote_prediction)": [[14, "aisquared.serving.get_remote_prediction.get_remote_prediction"]], "load_mann_model() (in module aisquared.serving.deploy_model)": [[14, "aisquared.serving.deploy_model.load_mann_model"]], "aisquared.utils": [[15, "module-aisquared.utils"]], "aisquared.utils.utils": [[15, "module-aisquared.utils.utils"]], "get_model() (in module aisquared.utils.utils)": [[15, "aisquared.utils.utils.get_model"]], "mimic_model() (in module aisquared.utils.utils)": [[15, "aisquared.utils.utils.mimic_model"]]}})